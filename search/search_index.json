{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Commodities Trading","text":"<p>Commodities trading is the buying and selling of raw materials or primary agricultural products, either physically or through financial instruments.</p> <p>It\u2019s one of the oldest forms of trade and still underpins much of the global economy.</p>"},{"location":"#types-of-commodities","title":"Types of Commodities","text":""},{"location":"#hard-commodities","title":"Hard commodities","text":"<ul> <li>Natural resources extracted or mined.</li> <li>Energy: crude oil, natural gas, coal, electricity.</li> <li>Metals: gold, silver, copper, aluminum, platinum, etc.</li> </ul>"},{"location":"#soft-commodities","title":"Soft commodities","text":"<ul> <li>Agricultural or livestock products.</li> <li>Grains: wheat, corn, soybeans, rice.</li> <li>Livestock: cattle, hogs.</li> <li>Others: coffee, cocoa, sugar, cotton, orange juice.</li> </ul>"},{"location":"#trading-venues","title":"Trading Venues","text":"<ul> <li>Spot markets: Immediate delivery of physical commodities.</li> <li>Futures markets: Standardized contracts to buy/sell at a future date (e.g., CME, ICE, LME).</li> <li>OTC (Over-the-Counter): Customized deals directly between parties (common in energy).</li> </ul>"},{"location":"#key-instruments","title":"Key Instruments","text":"<ul> <li>Futures contracts \u2013 standardized, highly liquid, used for hedging and speculation.</li> <li>Options on futures \u2013 provide the right (not obligation) to buy/sell at a set price.</li> <li>Swaps \u2013 exchange of cash flows, often used in energy (e.g., fixed-for-floating price).</li> <li>ETFs &amp; indices \u2013 allow exposure without direct futures trading.</li> <li>Physical contracts \u2013 shipping, warehousing, and delivery agreements.</li> </ul>"},{"location":"#market-participants","title":"Market Participants","text":"<ul> <li>Producers &amp; consumers: Oil companies, miners, farmers, food manufacturers, airlines (hedging against price fluctuations).</li> <li>Traders: Glencore, Vitol, Trafigura, Cargill (profit from logistics, arbitrage, speculation).</li> <li>Speculators &amp; investors: Hedge funds, asset managers, retail traders.</li> <li>Governments &amp; regulators: Influence supply/demand and oversee market fairness.</li> </ul>"},{"location":"#trading-strategies","title":"Trading Strategies","text":"<ul> <li>Hedging: Protect against adverse price movements (e.g., airlines hedge jet fuel).</li> <li>Speculation: Profit from anticipating price moves (e.g., going long gold before inflation).</li> <li>Arbitrage: Exploiting price differences across markets, time, or geographies.</li> <li>Spread trading: Trading price differentials (calendar spreads, crack spreads in oil).</li> </ul>"},{"location":"#factors-driving-prices","title":"Factors Driving Prices","text":"<ul> <li>Supply-side: Weather, geopolitics, strikes, production cuts, technology.</li> <li>Demand-side: Economic growth, consumer trends, industrial cycles.</li> <li>Macroeconomics: Inflation, interest rates, currencies.</li> <li>Logistics: Shipping costs, bottlenecks, storage availability.</li> <li>Speculative flows: Large capital movements from funds can amplify volatility.</li> </ul>"},{"location":"#risks","title":"Risks","text":"<ul> <li>Price volatility: Commodities can swing sharply.</li> <li>Geopolitical risk: Wars, sanctions, trade disputes.</li> <li>Credit risk: Counterparty default in OTC trades.</li> <li>Operational/logistics risk: Transport, storage, quality issues.</li> <li>Regulatory &amp; environmental: Carbon markets, green transition pressures.</li> </ul>"},{"location":"#technology-trends","title":"Technology &amp; Trends","text":"<ul> <li>Digital platforms and algo-trading increasing speed and efficiency.</li> <li>Data-driven analytics: Weather models, satellite imagery, AI for crop forecasts.</li> <li>Sustainability: Growth of carbon credits, green energy certificates.</li> <li>Tokenization: Commodities-backed digital assets emerging.</li> </ul>"},{"location":"#financial-vs-physical-perspectives","title":"Financial vs Physical perspectives","text":"<p>Commodities trading is about navigating global supply-demand dynamics, geopolitics, and risk management, using a mix of physical trade, futures markets, and financial instruments. It\u2019s where real-world goods meet financial markets.</p>"},{"location":"#financial-markets-paper-trading","title":"Financial markets (Paper Trading)","text":"<p>This is the financialized side of commodities:</p> <ul> <li>Futures &amp; Derivatives: Traders buy and sell standardized contracts on exchanges (CME, ICE, LME) without ever touching the physical commodity. Example: speculating on oil prices going up without owning a barrel.</li> <li>Hedging: Airlines lock in future fuel costs, farmers secure prices for crops before harvest, miners protect against falling metal prices.</li> <li>Speculation: Hedge funds and retail traders try to profit from short-term price moves (like gold before inflation or natural gas in a cold winter).</li> <li>Arbitrage: Exploiting mispricings \u2014 between markets (US vs Europe), time periods (this month vs next month), or products (e.g., crude oil vs gasoline spread).</li> <li>Indices &amp; ETFs: Investors gain exposure without managing futures directly.</li> </ul> <p>Here, it\u2019s mostly about price charts, volatility, leverage, and financial risk.</p>"},{"location":"#physical-logistics-real-trading","title":"Physical logistics (Real Trading)","text":"<p>This is the real-world movement of goods:</p> <ul> <li>Producers: Oil rigs, mines, farms.</li> <li>Transport &amp; storage: Tankers, rail, warehouses, pipelines.</li> <li>Trading houses: Glencore, Trafigura, Cargill buy from producers, manage logistics, and sell to consumers (industrials, governments, utilities).</li> <li>Consumers: Refineries, power plants, food companies, manufacturers.</li> <li>Supply chain risks: Port congestion, sanctions, strikes, weather disruptions, quality mismatches.</li> </ul> <p>Here, the business is about supply-demand flows, arbitrage between regions, and managing logistics &amp; credit risk.</p>"},{"location":"#summary","title":"Summary","text":"<ul> <li>Financial commodities trading is like Wall Street (futures, options, speculation).</li> <li>Physical commodities trading is like Main Street + shipping lanes (oil on tankers, wheat in silos, metals in warehouses).</li> </ul> <p>Both worlds are deeply connected \u2014 futures prices influence physical trade, and real-world disruptions shake the financial markets.</p>"},{"location":"#lifecycle-of-a-commodity-trade","title":"Lifecycle of a Commodity Trade","text":"<p>Let\u2019s walk through the full lifecycle of a commodity trade, step by step, showing how physical flows and financial hedging interact.</p>"},{"location":"#production-supply-side","title":"Production (Supply Side)","text":"<ul> <li>Producers: oil wells, mines, farms, plantations.</li> <li>They extract or harvest the raw commodity (e.g., crude oil, copper, coffee).</li> <li>Often sell forward to secure predictable revenues (hedging against price drops).</li> </ul> <p>\ud83d\udccc Example: A copper miner locks in sales for the next 6 months using futures contracts on the LME.</p>"},{"location":"#sale-to-trading-house","title":"Sale to Trading House","text":"<ul> <li>Producers rarely deal directly with all end buyers.</li> <li> <p>Trading houses (Glencore, Vitol, Trafigura, Cargill, etc.) step in:</p> </li> <li> <p>Buy from producers.</p> </li> <li>Handle transport, storage, blending, and delivery.</li> <li>Often finance producers in exchange for offtake agreements (long-term supply deals).</li> </ul> <p>\ud83d\udccc Example: Cargill buys soybeans from Brazilian farmers and arranges shipping to China.</p>"},{"location":"#logistics-storage","title":"Logistics &amp; Storage","text":"<ul> <li> <p>Commodities move through supply chains:</p> </li> <li> <p>Oil \u2192 pipelines, tankers, refineries.</p> </li> <li>Wheat \u2192 silos, trains, ports.</li> <li>Copper \u2192 warehouses, smelters, factories.</li> <li>Traders arbitrage geography (cheap wheat in Ukraine, expensive in Egypt).</li> <li>Storage allows them to play time arbitrage (carry trade: buy cheap now, store, sell later at higher futures prices).</li> </ul> <p>\ud83d\udccc Example: Trafigura stores crude oil in tankers when futures are in contango (future &gt; spot price).</p>"},{"location":"#financing-risk-management","title":"Financing &amp; Risk Management","text":"<ul> <li>Physical trade requires massive capital (billions).</li> <li>Banks and trade-finance desks provide credit lines, letters of credit (LCs), collateralized against cargo.</li> <li> <p>Hedging: Traders use futures, swaps, and options to lock in margins:</p> </li> <li> <p>Long physical (buy oil) \u2192 Short futures (sell oil contracts) to avoid price risk.</p> </li> <li>Keeps profits stable regardless of market swings.</li> </ul> <p>\ud83d\udccc Example: A trader buys crude at $80/barrel, sells futures at $82 to lock in a $2 margin.</p>"},{"location":"#delivery-transformation","title":"Delivery &amp; Transformation","text":"<ul> <li> <p>Commodities reach end users:</p> </li> <li> <p>Crude oil \u2192 refineries \u2192 gasoline, jet fuel.</p> </li> <li>Wheat \u2192 flour mills \u2192 bread &amp; pasta.</li> <li>Copper \u2192 smelters \u2192 wiring &amp; electronics.</li> <li>Sometimes trading houses also own downstream assets (refineries, smelters, mills) to capture extra margin.</li> </ul> <p>\ud83d\udccc Example: An oil trader delivers crude to a refinery, which refines and sells gasoline to distributors.</p>"},{"location":"#end-consumption-demand-side","title":"End Consumption (Demand Side)","text":"<ul> <li> <p>Final consumers drive demand:</p> </li> <li> <p>Airlines (jet fuel).</p> </li> <li>Utilities (natural gas, coal).</li> <li>Food companies (sugar, cocoa).</li> <li>Tech &amp; auto industries (metals).</li> <li>Demand fluctuations (recessions, weather, policy) feed back into price cycles.</li> </ul>"},{"location":"#how-physical-financial-worlds-tie-together","title":"How Physical &amp; Financial Worlds Tie Together","text":"<ul> <li>Physical trade = moving molecules &amp; bushels.</li> <li>Financial trade = managing risks &amp; speculation.</li> <li>Traders are \u201casset-light\u201d risk managers: their edge lies in logistics expertise plus smart hedging.</li> </ul> <p>\ud83d\udccc Without hedging, a tanker of oil can swing tens of millions in value overnight. Futures make the business survivable.</p> <p>\u2705 So, the lifecycle is: Producer \u2192 Trader \u2192 Logistics \u2192 Financing/Hedging \u2192 Delivery \u2192 Consumer.</p>"},{"location":"#financial-instruments-mapping","title":"Financial Instruments mapping","text":"<p>Here\u2019s a matrix view showing which players in the commodity trade lifecycle typically use each financial instrument. This lets you see at a glance how producers, traders, banks, and consumers interact with tools like forwards, LCs, futures, swaps, and options.</p> Producers Traders Banks Consumers Forward Sales Forward Sales (hedging) Forward Sales \u2014 \u2014 Letters of Credit \u2014 Letters of Credit Letters of Credit (financing) \u2014 Freight Derivatives \u2014 Freight Derivatives \u2014 \u2014 Futures &amp; Swaps Futures &amp; Swaps (hedging) Futures &amp; Swaps Swaps (counterparty) Futures (hedging costs) Options \u2014 Options Options (structuring) Options (flexibility)"},{"location":"#case-studies","title":"Case studies","text":""},{"location":"#airline-hedging-jet-fuel","title":"\u2708\ufe0f Airline Hedging Jet Fuel","text":"<p>Problem: An airline is exposed to volatile jet fuel prices. If oil spikes, their costs soar.</p> <p>Solution</p> <ul> <li>The airline buys futures on jet fuel (or crude oil as a proxy).</li> <li>If oil prices rise, futures profits offset higher fuel costs.</li> <li>If oil prices fall, they lose on futures but save on actual fuel.</li> </ul> <p>Instruments used: Futures, Swaps, Options. Players involved: Airline (consumer), bank (swap counterparty), exchange.</p> <p>\u2705 Outcome: The airline locks in stable costs \u2192 fewer surprises in ticket pricing.</p>"},{"location":"#cargill-financing-soybeans","title":"\ud83c\udf31 Cargill Financing Soybeans","text":"<p>Problem: Brazilian farmers harvest soybeans but need cash upfront to run operations. They can\u2019t wait until shipment to China.</p> <p>Solution</p> <ul> <li>Cargill provides financing in exchange for an offtake agreement (future soybean delivery).</li> <li>A Letter of Credit (LC) from a bank ensures payment security across borders.</li> <li>Cargill hedges on CBOT futures to lock in margins between Brazil purchase price and China selling price.</li> </ul> <p>Instruments used: Forwards, LCs, Futures. Players involved: Farmer (producer), Cargill (trader), Bank (financing), Chinese buyer (consumer).</p> <p>\u2705 Outcome: Farmer gets liquidity, Cargill secures supply, bank earns fees, and buyer gets reliable delivery.</p>"},{"location":"#summary_1","title":"Summary","text":"<p>These two examples show how financial tools (paper trading) and physical flows (ships, silos, planes) are always intertwined.</p> <p>Here\u2019s a side-by-side comparison of the two case studies highlighting the actors, risks, instruments, and goals for each.</p> Actors Main Risk Instruments Used Goal Case Study 1: Airline Hedging Jet Fuel Airline (Consumer), Bank, Exchange Fuel price volatility (rising oil costs) Futures, Swaps, Options Stabilize jet fuel costs Case Study 2: Cargill Soybean Financing Farmer (Producer), Cargill (Trader), Bank, Chinese Buyer Financing needs + price risk in international trade Forward Sales, Letters of Credit, Futures Secure financing, manage trade flows, lock in margins"},{"location":"#commodity-trading-playbook","title":"Commodity Trading Playbook","text":"<p>A reusable framework showing which instruments and strategies are most typical depending on your role in the value chain.</p>"},{"location":"#producers","title":"Producers","text":"<p>Mines, Farms, Oil Rigs.</p> <p>Main Risks: Falling prices, cash flow gaps before sales.</p> <p>Common Tools</p> <ul> <li>Forward Sales / Offtake Agreements \u2192 lock in future revenue.</li> <li>Futures &amp; Swaps \u2192 hedge against falling prices.</li> <li>Pre-export financing / Letters of Credit \u2192 get upfront cash secured against cargo.</li> </ul> <p>Goal: Secure predictable cash flows &amp; reduce exposure to downturns.</p>"},{"location":"#traders","title":"Traders","text":"<p>Glencore, Trafigura, Cargill, Vitol.</p> <p>Main Risks: Market volatility, financing large cargoes, logistics disruptions.</p> <p>Common Tools</p> <ul> <li>Letters of Credit (LCs) \u2192 finance and secure cross-border trades.</li> <li>Futures, Swaps, Options \u2192 hedge market exposures while arbitraging.</li> <li>Freight Derivatives \u2192 manage shipping risk.</li> </ul> <p>Goal: Capture arbitrage (time, geography, quality), manage financing, and keep margins stable.</p>"},{"location":"#banks-financial-institutions","title":"Banks &amp; Financial Institutions","text":"<p>Main Risks: Counterparty default, regulatory risk.</p> <p>Common Tools</p> <ul> <li>Letters of Credit, Guarantees \u2192 provide payment assurance.</li> <li>Swaps, Structured Options \u2192 tailor risk solutions for clients.</li> </ul> <p>Goal: Earn fees/interest while enabling trade; act as counterparties to hedges.</p>"},{"location":"#consumers","title":"Consumers","text":"<p>Airlines, Utilities, Food Companies, Manufacturers.</p> <p>Main Risks: Rising input costs (fuel, grain, metals).</p> <p>Common Tools</p> <ul> <li>Futures &amp; Options \u2192 lock in stable input costs.</li> <li>Swaps \u2192 fix long-term price levels.</li> </ul> <p>Goal: Protect margins, stabilize costs, and ensure supply continuity.</p>"},{"location":"#cheat-sheet","title":"Cheat Sheet","text":"<ul> <li>Producer \u2192 Protect downside (forwards, futures).</li> <li>Trader \u2192 Manage flows &amp; finance (LCs, swaps, futures).</li> <li>Bank \u2192 Enable &amp; structure (LCs, swaps, options).</li> <li>Consumer \u2192 Protect upside cost (futures, options, swaps).</li> </ul> <p>This gives you a modular framework: whenever you analyze a commodity trade, you can map actors \u2192 risks \u2192 instruments \u2192 goals.</p> <p>Here\u2019s the visual 2\u00d72 matrix \u2705 \u2014 showing which actors (Producers, Traders, Banks, Consumers) typically use which instruments (forwards, LCs, futures, swaps, options, freight derivatives).</p>"},{"location":"ctrm/architecture/ctrm_system_architecture/","title":"Architecture alternatives","text":"<p>IT systems commonly called CTRM / ETRM systems have to balance real-time trading needs, risk calculations, logistics complexity, and regulatory compliance.</p> <p>Several architectural alternatives exist, each with trade-offs.</p>"},{"location":"ctrm/architecture/ctrm_system_architecture/#monolithic-application-traditional-ctrm","title":"Monolithic Application (Traditional CTRM)","text":"<p>\ud83d\udd39 Example: Endur, Allegro, TriplePoint (older generation).</p> <p>Characteristics:</p> <ul> <li>One large codebase with all modules (trade capture, risk, logistics, settlement).</li> <li>Tight coupling between front, middle, and back office.</li> <li>Often built on relational DB + heavy customization.</li> </ul> <p>Pros:</p> <ul> <li>Strong transactional integrity (ACID).</li> <li>Easier to implement at small scale.</li> <li>One-stop-shop (all functionality in one place).</li> </ul> <p>Cons:</p> <ul> <li>Hard to scale horizontally.</li> <li>Expensive to customize, upgrade, and maintain.</li> <li>Risk of vendor lock-in.</li> </ul> <p>When to use: Smaller firms, or when a stable, standardized product is enough.</p> <pre><code>@startuml Monolith\ntitle Monolithic CTRM System\n\nnode \"CTRM Monolith\" {\n  [UI Layer] --&gt; [Application Logic]\n  [Application Logic] --&gt; [Domain Logic]\n  [Domain Logic] --&gt; [Database]\n}\n\n@enduml\n</code></pre> <p>Notes: All modules (Trade, Risk, Logistics, Settlement, Compliance) live in the same codebase + DB.</p>"},{"location":"ctrm/architecture/ctrm_system_architecture/#layered-modular-architecture","title":"Layered Modular Architecture","text":"<p>\ud83d\udd39 Common in modernized CTRMs.</p> <p>Layers:</p> <ul> <li>Presentation (UI, dashboards).</li> <li>Application services (trade workflows, approvals).</li> <li>Domain layer (trades, positions, settlements modeled with DDD).</li> <li>Infrastructure (DB, messaging, integrations).</li> </ul> <p>Pros:</p> <ul> <li>Clear separation of concerns.</li> <li>Easier to adapt domain logic without breaking integrations.</li> <li>Works well with DDD (bounded contexts inside domain layer).</li> </ul> <p>Cons:</p> <ul> <li>Still monolithic deployment in many cases.</li> <li>Limited scalability if risk calcs are CPU-heavy.</li> </ul> <p>When to use: Mid-size firms looking for flexibility but not full microservices.</p>"},{"location":"ctrm/architecture/ctrm_system_architecture/#service-oriented-architecture-soa","title":"Service-Oriented Architecture (SOA)","text":"<p>\ud83d\udd39 Transitional step between monolith and microservices.</p> <p>Characteristics:</p> <ul> <li>Domain split into services (Trade Service, Risk Service, Settlement Service).</li> <li>Services communicate via ESB (Enterprise Service Bus) or SOAP APIs.</li> </ul> <p>Pros:</p> <ul> <li>Decouples modules.</li> <li>Reuse of services across workflows.</li> <li>More scalable than monolith.</li> </ul> <p>Cons:</p> <ul> <li>ESB can become bottleneck (centralized point).</li> <li>Often \u201cdistributed monolith\u201d in practice.</li> </ul> <p>When to use: Enterprises modernizing legacy CTRMs incrementally.</p>"},{"location":"ctrm/architecture/ctrm_system_architecture/#microservices-architecture","title":"Microservices Architecture","text":"<p>\ud83d\udd39 Cutting-edge, cloud-native CTRM platforms.</p> <p>Characteristics:</p> <ul> <li>Each bounded context = microservice (Trade Capture, Risk Engine, Logistics, Settlement, Compliance).</li> <li>Services communicate asynchronously (Kafka, RabbitMQ) or via REST/GraphQL.</li> <li>Polyglot persistence (e.g., Postgres for trades, time-series DB for risk, document DB for audit).</li> </ul> <p>Pros:</p> <ul> <li>Independent scaling (e.g., risk calc cluster scales separately).</li> <li>Easier CI/CD and upgrades.</li> <li>Enables event-driven flows (TradeCaptured \u2192 triggers Risk update, Settlement request).</li> </ul> <p>Cons:</p> <ul> <li>Complex orchestration, service discovery, observability required.</li> <li>Distributed data consistency challenges.</li> <li>Higher DevOps maturity needed.</li> </ul> <p>When to use: Large trading houses needing agility, high scalability, and modularity.</p> <pre><code>@startuml Microservices\ntitle Microservices-based CTRM System\n\ncloud \"API Gateway\" as GW\n\npackage \"Microservices\" {\n  [Trade Service]\n  [Risk Service]\n  [Logistics Service]\n  [Settlement Service]\n  [Compliance Service]\n  [Analytics Service]\n}\n\ndatabase \"Trade DB\"\ndatabase \"Risk DB\"\ndatabase \"Logistics DB\"\ndatabase \"Settlement DB\"\ndatabase \"Compliance DB\"\n\nGW --&gt; [Trade Service]\nGW --&gt; [Risk Service]\nGW --&gt; [Logistics Service]\nGW --&gt; [Settlement Service]\nGW --&gt; [Compliance Service]\nGW --&gt; [Analytics Service]\n\n[Trade Service] --&gt; \"Trade DB\"\n[Risk Service] --&gt; \"Risk DB\"\n[Logistics Service] --&gt; \"Logistics DB\"\n[Settlement Service] --&gt; \"Settlement DB\"\n[Compliance Service] --&gt; \"Compliance DB\"\n\n@enduml\n</code></pre> <p>Notes: Each service = bounded context, owns its data, communicates via API/events.</p>"},{"location":"ctrm/architecture/ctrm_system_architecture/#event-driven-streaming-architecture","title":"Event-Driven / Streaming Architecture","text":"<p>\ud83d\udd39 Fits naturally with trading/risk workflows.</p> <p>Characteristics:</p> <ul> <li>Core system built around domain events (<code>TradeCaptured</code>, <code>PositionUpdated</code>, <code>ShipmentScheduled</code>, <code>PaymentSettled</code>).</li> <li>Kafka or Pulsar used as event backbone.</li> <li>Risk and compliance services subscribe to events in near real time.</li> </ul> <p>Pros:</p> <ul> <li>Natural alignment with DDD &amp; event storming.</li> <li>Decoupled services \u2014 new subscribers can be added without changing producers.</li> <li>Enables real-time dashboards and risk analytics.</li> </ul> <p>Cons:</p> <ul> <li>Event ordering &amp; replay handling complexity.</li> <li>Requires strong data governance for event schemas.</li> </ul> <p>When to use: Firms prioritizing real-time risk and compliance.</p> <pre><code>@startuml EventDriven\ntitle Event-Driven CTRM System\n\nqueue \"Event Bus (Kafka/Pulsar)\" as BUS\n\n[Trade Service] -down-&gt; BUS : publishes TradeCaptured\n[Risk Service] -down-&gt; BUS : subscribes TradeCaptured\\npublishes PositionUpdated\n[Logistics Service] -down-&gt; BUS : subscribes TradeCaptured\\npublishes ShipmentScheduled\n[Settlement Service] -down-&gt; BUS : subscribes TradeCaptured\\npublishes PaymentSettled\n[Compliance Service] -down-&gt; BUS : subscribes TradeCaptured, PositionUpdated, PaymentSettled\n[Analytics Service] -down-&gt; BUS : subscribes PositionUpdated, ShipmentScheduled\n\n@enduml\n</code></pre> <p>Notes: System is event-driven, highly decoupled, supports real-time risk &amp; compliance.</p>"},{"location":"ctrm/architecture/ctrm_system_architecture/#hybrid-cloud-modular-saas","title":"Hybrid Cloud / Modular SaaS","text":"<p>\ud83d\udd39 Emerging trend: composable CTRM solutions.</p> <p>Characteristics:</p> <ul> <li>Core CTRM for trade &amp; settlement (on-prem or cloud).</li> <li>Best-of-breed SaaS integrations: logistics (e.g., vessel tracking), risk analytics, compliance reporting.</li> <li>API-first architecture.</li> </ul> <p>Pros:</p> <ul> <li>Flexibility: swap modules without vendor lock-in.</li> <li>Cloud scalability.</li> <li>Lower upfront cost.</li> </ul> <p>Cons:</p> <ul> <li>Integration overhead.</li> <li>Data consistency across vendors.</li> <li>Regulatory concerns about cloud hosting.</li> </ul> <p>When to use: Firms seeking agility with modular IT landscape.</p>"},{"location":"ctrm/architecture/ctrm_system_architecture/#summary","title":"Summary","text":"<ul> <li>Monolithic CTRM \u2192 stable, but rigid.</li> <li>Layered Modular \u2192 clean design, still limited scaling.</li> <li>SOA \u2192 better modularity, but ESB bottleneck.</li> <li>Microservices \u2192 full flexibility, but complex.</li> <li>Event-Driven \u2192 best for real-time trading &amp; risk.</li> <li>Hybrid SaaS \u2192 composable, future-proof, but integration-heavy.</li> </ul>"},{"location":"ctrm/architecture/adr/adr-architecture-decisions/","title":"Architecture Decisions \u2013 Highlights","text":"<ol> <li>Event-Driven Backbone: Use Kafka/Pulsar with outbox pattern; guarantee at-least-once; consumers idempotent.</li> <li>Consistency: Strong within aggregates; eventual across contexts; sagas for long-running flows.</li> <li>Market Data Fallbacks: Primary/backup sources with circuit breakers and clear operator feedback.</li> <li>Auditability: Immutable event logs; append-only per aggregate; time-travel debugging.</li> <li>Observability: Trace IDs across events; metrics for latency, retries, backlog; dead-letter queues managed.</li> </ol>"},{"location":"ctrm/architecture/infra/kafka-topics/","title":"Kafka Topics (proposed)","text":"<ul> <li><code>trading.orders.v1</code> \u2014 key: <code>orderId</code>, events: <code>OrderPlaced</code>, <code>OrderCancelled</code>, <code>OrderRejected</code></li> <li><code>trading.trades.v1</code> \u2014 key: <code>tradeId</code>, events: <code>TradeCaptured</code></li> <li><code>trading.positions.v1</code> \u2014 key: <code>bookId|instrument</code>, events: <code>PositionUpdated</code></li> <li><code>risk.limits.v1</code> \u2014 key: <code>scope|limitName</code>, events: <code>LimitBreached</code>, <code>LimitRestored</code></li> <li><code>logistics.shipments.v1</code> \u2014 key: <code>shipmentId</code>, events: <code>ShipmentScheduled</code>, <code>ShipmentReceived</code></li> <li><code>finance.invoices.v1</code> \u2014 key: <code>invoiceId</code>, events: <code>InvoiceIssued</code>, <code>ShortPaymentDetected</code>, <code>PaymentReconciled</code></li> <li><code>compliance.alerts.v1</code> \u2014 key: <code>caseId</code>, events: <code>SurveillanceAlertRaised</code></li> <li><code>marketdata.feeds.v1</code> \u2014 key: <code>priceFeedId</code>, events: <code>PrimaryFeedDown</code>, <code>FallbackActivated</code></li> </ul> <p>Conventions</p> <ul> <li>Partition by natural key; use compacted topics for slowly-changing read models if needed.</li> <li>Include <code>traceId</code>, <code>causationId</code>, <code>correlationId</code> in headers.</li> <li>Schema registry: namespace <code>ctrm.*</code>, Avro with compatibility=BACKWARD.</li> </ul>"},{"location":"ctrm/architecture/sql/outbox-ddl/","title":"Outboxing","text":"<pre><code>-- Generic Outbox table for the outbox pattern\nCREATE TABLE IF NOT EXISTS outbox_events (\n  id UUID PRIMARY KEY,\n  aggregate_type VARCHAR(120) NOT NULL,\n  aggregate_id VARCHAR(120) NOT NULL,\n  event_type VARCHAR(120) NOT NULL,\n  payload JSONB NOT NULL,\n  headers JSONB NOT NULL DEFAULT '{}'::jsonb,\n  occurred_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),\n  published_at TIMESTAMP WITH TIME ZONE,\n  partition_key VARCHAR(256),\n  UNIQUE (aggregate_type, id)\n);\n\n-- Index for polling publishers\nCREATE INDEX IF NOT EXISTS idx_outbox_published_null ON outbox_events (published_at) WHERE published_at IS NULL;\nCREATE INDEX IF NOT EXISTS idx_outbox_occurred_at ON outbox_events (occurred_at);\n\n-- Example: Debezium/CDC will publish events to Kafka by capturing inserts/updates here.\n</code></pre>"},{"location":"ctrm/domain/aggregates-trading/","title":"Trading Aggregates (Mermaid class diagram)","text":"<pre><code>classDiagram\n  class Order {\n    id: String\n    side: BUY|SELL\n    instrument: String\n    qty: long\n    price: decimal?\n    timeInForce: String\n    status: String\n    route: String?\n  }\n  class Trade {\n    tradeId: String\n    orderId: String\n    instrument: String\n    qty: long\n    price: decimal\n    venue: String\n    timestamp: DateTime\n  }\n  class Position {\n    bookId: String\n    instrument: String\n    netQty: long\n    avgPrice: decimal\n  }\n  Order \"1\" --&gt; \"*\" Trade : results in\n  Trade --&gt; Position : updates\n</code></pre>"},{"location":"ctrm/domain/context-map/","title":"Context Map (Mermaid)","text":"<pre><code>flowchart LR\n  MD[Market Data] --&gt;|ACL| TR[Trading]\n  RD[Reference Data] --&gt;|Published Language| TR\n  TR --&gt;|Customer/Supplier| RK[Risk]\n  TR --&gt;|Customer/Supplier + Shared Kernel (Trade schema)| FN[Finance]\n  TR --&gt;|Customer/Supplier + ACL| LG[Physical Logistics]\n  LG --&gt;|Conformist (delivery\u2192invoice)| FN\n  TR --&gt; CM[Compliance]\n  CM --- TR\n  IAM[IAM] --&gt; TR\n  RD --&gt; RK\n  RD --&gt; FN\n  RD --&gt; LG\n</code></pre>"},{"location":"ctrm/domain/ctrm_ddd_strategic/","title":"Strategic DDD for Commodities Trading domain","text":"<p>From a DDD perspective, commodities trading decomposes into bounded contexts around trade, risk, logistics, finance, compliance, and analytics.</p> <ul> <li>Entities &amp; Aggregates manage core business objects (Trade, Shipment, Settlement, Portfolio).</li> <li>Value Objects model immutable concepts (Price, Quantity, Currency).</li> <li>Domain Events capture state transitions critical to business processes.</li> <li>Context Maps define how subdomains collaborate.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#core-domain-subdomains","title":"Core Domain &amp; Subdomains","text":"<p>At its heart, commodities trading is about managing trades and risks across physical flows and financial instruments. We can split the domain into subdomains:</p> <ul> <li>Trade Capture &amp; Deal Lifecycle (core)</li> <li>Risk Management (core)</li> <li>Logistics &amp; Operations (supporting)</li> <li>Financing &amp; Settlement (supporting)</li> <li>Compliance &amp; Reporting (generic/subdomain)</li> <li>Analytics &amp; Decision Support (supporting/strategic)</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#strategic-design","title":"Strategic Design","text":"<ul> <li>Core Domain: Trade Capture &amp; Risk Management (where competitive advantage lies).</li> <li>Supporting Domains: Logistics, Financing, Analytics (specialized but not unique).</li> <li>Generic Domains: Compliance, Reporting (mandatory but commoditized).</li> </ul> <p>This informs build vs. buy decisions \u2014 e.g., build risk engine in-house, but buy compliance modules.</p>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#bounded-contexts","title":"Bounded Contexts","text":"<p>Each subdomain can be modeled as a bounded context with its own ubiquitous language and models.</p>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#trade-capture-context","title":"Trade Capture Context","text":"<ul> <li>Entities: <code>Trade</code>, <code>Counterparty</code>, <code>Instrument</code>, <code>Contract</code></li> <li>Value Objects: <code>Price</code>, <code>Quantity</code>, <code>TradeDate</code>, <code>TradeId</code></li> <li>Aggregates: <code>Trade</code> (root, holds trade lines, instrument, counterparty, status)</li> <li>Events: <code>TradeCaptured</code>, <code>TradeAmended</code>, <code>TradeCancelled</code></li> <li>Services: <code>TradeValidationService</code>, <code>TradeBookingService</code></li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#risk-management-context","title":"Risk Management Context","text":"<ul> <li>Entities: <code>Position</code>, <code>Exposure</code>, <code>RiskLimit</code>, <code>Portfolio</code></li> <li>Value Objects: <code>MarkToMarket</code>, <code>VaR</code>, <code>ScenarioResult</code></li> <li>Aggregates: <code>Portfolio</code> (root for positions &amp; exposures)</li> <li>Events: <code>PositionUpdated</code>, <code>LimitBreached</code>, <code>PnLCalculated</code></li> <li>Services: <code>RiskCalculationService</code>, <code>MarketDataFeed</code></li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#logistics-context","title":"Logistics Context","text":"<ul> <li>Entities: <code>Shipment</code>, <code>StorageFacility</code>, <code>InventoryLot</code></li> <li>Value Objects: <code>Quantity</code>, <code>Location</code>, <code>Incoterms</code></li> <li>Aggregates: <code>Shipment</code> (root; includes lots, schedules, destination)</li> <li>Events: <code>ShipmentScheduled</code>, <code>ShipmentDelivered</code>, <code>InventoryAdjusted</code></li> <li>Services: <code>LogisticsSchedulingService</code>, <code>InventoryReconciliationService</code></li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#financing-settlement-context","title":"Financing &amp; Settlement Context","text":"<ul> <li>Entities: <code>Settlement</code>, <code>PaymentInstruction</code>, <code>LetterOfCredit</code></li> <li>Value Objects: <code>Currency</code>, <code>Amount</code>, <code>SettlementDate</code></li> <li>Aggregates: <code>Settlement</code> (root; holds trade reference, payment details, status)</li> <li>Events: <code>PaymentSettled</code>, <code>LCExpired</code>, <code>SettlementFailed</code></li> <li>Services: <code>SettlementProcessingService</code>, <code>BankIntegrationService</code></li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#compliance-context","title":"Compliance Context","text":"<ul> <li>Entities: <code>RegulatoryReport</code>, <code>AuditLog</code>, <code>KYCRecord</code></li> <li>Value Objects: <code>LEI</code>, <code>UTI</code>, <code>Timestamp</code></li> <li>Aggregates: <code>Report</code> (root)</li> <li>Events: <code>ReportGenerated</code>, <code>KYCFlagged</code></li> <li>Services: <code>RegulatoryReportingService</code>, <code>AuditTrailService</code></li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#analytics-context","title":"Analytics Context","text":"<ul> <li>Entities: <code>Curve</code>, <code>Scenario</code>, <code>Forecast</code></li> <li>Value Objects: <code>ForwardPrice</code>, <code>StressFactor</code></li> <li>Aggregates: <code>MarketAnalysis</code></li> <li>Events: <code>CurveGenerated</code>, <code>ScenarioRunCompleted</code></li> <li>Services: <code>PricingEngine</code>, <code>ForecastingService</code></li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#context-map","title":"Context Map","text":"<pre><code>title Commodities Trading Domain - Context Relationships\n\nrectangle \"Trade Capture\" as TC\nrectangle \"Risk Management\" as RM\nrectangle \"Logistics\" as LG\nrectangle \"Financing &amp; Settlement\" as FS\nrectangle \"Compliance\" as CP\nrectangle \"Analytics\" as AN\n\nTC -[#blue]-&gt; RM : Customer-Supplier\nTC -[#blue]-&gt; LG : Customer-Supplier\nTC -[#blue]-&gt; FS : Customer-Supplier\nRM &lt;-[#green]-&gt; AN : Partnership\nFS -[#orange]-&gt; CP : Open Host Service\nTC -[#purple]-&gt; CP : Published Language\nRM -[#purple]-&gt; CP : Published Language\nLG -[#purple]-&gt; CP : Published Language\n\nlegend right\n  == Legend ==\n  Blue: Customer-Supplier\n  Green: Partnership\n  Orange: Open Host Service\n  Purple: Published Language\nendlegend\n</code></pre> <p>Bounded contexts interact through integrations and translations:</p> <ul> <li>Trade Capture \u2192 Risk Management: trades feed into positions &amp; exposures.</li> <li>Trade Capture \u2192 Logistics: physical trades trigger shipment creation.</li> <li>Trade Capture \u2192 Financing: financial obligations flow into settlements.</li> <li>Risk Management \u2194 Analytics: pricing, curves, scenarios enrich valuations.</li> <li>Financing \u2192 Compliance: settlements must generate reports and logs.</li> <li>All contexts \u2192 Compliance: audit trail is ubiquitous.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#trade-capture-risk-management","title":"Trade Capture \u2192 Risk Management","text":"<ul> <li>Pattern: Conformist / Customer-Supplier</li> <li>Risk depends on trade data and has to conform to the model exposed by Trade Capture.</li> <li>Implication: Risk Management consumes trades, but does not redefine them.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#trade-capture-logistics","title":"Trade Capture \u2192 Logistics","text":"<ul> <li>Pattern: Customer-Supplier</li> <li>Logistics depends on physical trade details (quantities, delivery terms).</li> <li>Implication: Logistics must align with trade capture\u2019s definitions of quantity, commodity, counterparty.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#trade-capture-financing-settlement","title":"Trade Capture \u2192 Financing &amp; Settlement","text":"<ul> <li>Pattern: Customer-Supplier</li> <li>Settlement requires trade details to generate obligations.</li> <li>Implication: Trade Capture is the source of truth; Finance aligns to its schema.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#risk-management-analytics","title":"Risk Management \u2194 Analytics","text":"<ul> <li>Pattern: Partnership</li> <li>Risk and Analytics collaborate \u2014 risk engines depend on analytics (curves, scenarios), analytics depends on trades and positions.</li> <li>Implication: Shared model, high collaboration.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#financing-settlement-compliance","title":"Financing &amp; Settlement \u2192 Compliance","text":"<ul> <li>Pattern: Open Host Service</li> <li>Compliance \u201csubscribes\u201d to settlement events and consumes data for regulatory reporting.</li> <li>Implication: Compliance is generic and should not impose its model upstream.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#trade-capture-compliance","title":"Trade Capture \u2192 Compliance","text":"<ul> <li>Pattern: Published Language</li> <li>Compliance consumes trade data for audit and regulatory reports.</li> <li>Implication: A shared vocabulary (UTI, LEI, trade identifiers) ensures consistency.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#risk-management-compliance","title":"Risk Management \u2192 Compliance","text":"<ul> <li>Pattern: Published Language</li> <li>Compliance consumes risk metrics (VaR, exposures).</li> <li>Implication: Needs standardized reporting language.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#logistics-compliance","title":"Logistics \u2192 Compliance","text":"<ul> <li>Pattern: Published Language</li> <li>Compliance consumes shipment and delivery events.</li> <li>Implication: Compliance translates delivery events into regulatory language (e.g., REMIT).</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_strategic/#event-storming","title":"Event Storming","text":"<p>Key domain events across contexts:</p> <ul> <li><code>TradeCaptured</code>, <code>TradeConfirmed</code>, <code>TradeAmended</code></li> <li><code>PositionUpdated</code>, <code>LimitBreached</code>, <code>PnLCalculated</code></li> <li><code>ShipmentScheduled</code>, <code>ShipmentDelivered</code></li> <li><code>PaymentSettled</code>, <code>LCExpired</code></li> <li><code>ReportGenerated</code>, <code>KYCFlagged</code></li> </ul> <p>These events form the backbone of an event-driven architecture.</p>"},{"location":"ctrm/domain/ctrm_ddd_tactical/","title":"Tactical DDD for Commodities Trading domain","text":"<p>Diving into the strategic bounded contexts, let's visit aggregates, entities, value objects, domain services, repositories, factories, and domain events.</p>"},{"location":"ctrm/domain/ctrm_ddd_tactical/#aggregates-aggregate-roots","title":"Aggregates &amp; Aggregate Roots","text":"<p>Aggregates are consistency boundaries. In commodities trading, they ensure that invariants hold across related objects.</p>"},{"location":"ctrm/domain/ctrm_ddd_tactical/#trade-capture-context","title":"Trade Capture Context","text":"<pre><code>title Trade Capture Domain Model\n\nclass Trade {\n  +tradeId\n  +instrument\n  +price\n  +quantity\n  +status\n}\n\nclass TradeLine\nclass Counterparty {\n  +counterpartyId\n  +name\n}\nclass Contract\n\nclass Price\nclass Quantity\nclass TradeDate\nclass InstrumentId\n\nTrade *-- TradeLine\nTrade --&gt; Counterparty\nTrade --&gt; Contract\nTrade --&gt; Price\nTrade --&gt; Quantity\nTrade --&gt; TradeDate\nTrade --&gt; InstrumentId\n</code></pre> <ul> <li>Aggregate Root: <code>Trade</code></li> <li>Entities: <code>TradeLine</code>, <code>Counterparty</code>, <code>Contract</code></li> <li>Value Objects: <code>Price</code>, <code>Quantity</code>, <code>InstrumentId</code>, <code>TradeDate</code></li> <li> <p>Invariants:</p> </li> <li> <p>Trade must have a counterparty.</p> </li> <li>Trade quantity &gt; 0.</li> <li>Status transitions follow rules (Captured \u2192 Confirmed \u2192 Settled).</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_tactical/#risk-management-context","title":"Risk Management Context","text":"<pre><code>@startuml RiskManagement\ntitle Risk Management Domain Model\n\nclass Portfolio {\n  +portfolioId\n  +positions\n}\n\nclass Position {\n  +instrument\n  +quantity\n}\nclass Exposure\nclass RiskLimit\nclass MarkToMarket\nclass ScenarioResult\nclass PnL\n\nPortfolio *-- Position\nPosition --&gt; Exposure\nPortfolio --&gt; RiskLimit\nPosition --&gt; MarkToMarket\nPortfolio --&gt; PnL\nPortfolio --&gt; ScenarioResult\n\n@enduml\n</code></pre> <ul> <li>Aggregate Root: <code>Portfolio</code></li> <li>Entities: <code>Position</code>, <code>Exposure</code>, <code>RiskLimit</code></li> <li>Value Objects: <code>MarkToMarket</code>, <code>ScenarioResult</code>, <code>PnL</code></li> <li> <p>Invariants:</p> </li> <li> <p>Portfolio exposure must not exceed assigned <code>RiskLimit</code>.</p> </li> <li>Position is derived only from valid trades.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_tactical/#logistics-context","title":"Logistics Context","text":"<pre><code>@startuml Logistics\ntitle Logistics Domain Model\n\nclass Shipment {\n  +shipmentId\n  +status\n}\n\nclass InventoryLot\nclass Vessel\nclass StorageFacility\nclass Quantity\nclass Location\nclass Incoterms\n\nShipment *-- InventoryLot\nShipment --&gt; Vessel\nInventoryLot --&gt; StorageFacility\nShipment --&gt; Quantity\nShipment --&gt; Location\nShipment --&gt; Incoterms\n\n@enduml\n</code></pre> <ul> <li>Aggregate Root: <code>Shipment</code></li> <li>Entities: <code>InventoryLot</code>, <code>Vessel</code>, <code>StorageFacility</code></li> <li>Value Objects: <code>Quantity</code>, <code>Location</code>, <code>Incoterms</code></li> <li> <p>Invariants:</p> </li> <li> <p>Shipment quantity cannot exceed available inventory.</p> </li> <li>Delivery must match trade Incoterms.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_tactical/#financing-settlement-context","title":"Financing &amp; Settlement Context","text":"<pre><code>@startuml Settlement\ntitle Financing &amp; Settlement Domain Model\n\nclass Settlement {\n  +settlementId\n  +status\n}\n\nclass PaymentInstruction\nclass LetterOfCredit\nclass Currency\nclass Amount\nclass SettlementDate\n\nSettlement *-- PaymentInstruction\nSettlement --&gt; LetterOfCredit\nSettlement --&gt; Currency\nSettlement --&gt; Amount\nSettlement --&gt; SettlementDate\n\n@enduml\n</code></pre> <ul> <li>Aggregate Root: <code>Settlement</code></li> <li>Entities: <code>PaymentInstruction</code>, <code>LetterOfCredit</code></li> <li>Value Objects: <code>Currency</code>, <code>Amount</code>, <code>SettlementDate</code></li> <li> <p>Invariants:</p> </li> <li> <p>Payment must not be executed if LC is expired.</p> </li> <li>Settlement links back to confirmed trade.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_tactical/#compliance-context","title":"Compliance Context","text":"<pre><code>@startuml Compliance\ntitle Compliance Domain Model\n\nclass RegulatoryReport {\n  +reportId\n  +type\n}\nclass AuditLog\nclass KYCRecord\nclass LEI\nclass UTI\nclass Timestamp\n\nRegulatoryReport --&gt; LEI\nRegulatoryReport --&gt; UTI\nRegulatoryReport --&gt; Timestamp\nRegulatoryReport *-- AuditLog\nRegulatoryReport --&gt; KYCRecord\n\n@enduml\n</code></pre> <ul> <li>Aggregate Root: <code>RegulatoryReport</code></li> <li>Entities: <code>AuditLog</code>, <code>KYCRecord</code></li> <li>Value Objects: <code>LEI</code>, <code>UTI</code>, <code>Timestamp</code></li> <li> <p>Invariants:</p> </li> <li> <p>All reported trades must contain mandatory identifiers (LEI, UTI).</p> </li> <li>Audit log must be immutable.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_tactical/#analytics-context","title":"Analytics Context","text":"<pre><code>@startuml Analytics\ntitle Analytics Domain Model\n\nclass Curve {\n  +curveId\n  +type\n}\nclass Scenario\nclass Forecast\nclass ForwardPrice\nclass Volatility\nclass StressFactor\n\nCurve --&gt; ForwardPrice\nCurve --&gt; Volatility\nCurve *-- Scenario\nCurve *-- Forecast\nScenario --&gt; StressFactor\n\n@enduml\n</code></pre> <ul> <li>Aggregate Root: <code>Curve</code></li> <li>Entities: <code>Scenario</code>, <code>Forecast</code></li> <li>Value Objects: <code>ForwardPrice</code>, <code>Volatility</code>, <code>StressFactor</code></li> <li> <p>Invariants:</p> </li> <li> <p>Curve must be generated from validated market data.</p> </li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_tactical/#entities-vs-value-objects","title":"Entities vs. Value Objects","text":"<ul> <li>Entities (identity, lifecycle): <code>Trade</code>, <code>Position</code>, <code>Shipment</code>, <code>Settlement</code>, <code>Counterparty</code>.</li> <li>Value Objects (immutable, equality by value): <code>Price</code>, <code>Quantity</code>, <code>Currency</code>, <code>TradeDate</code>, <code>Incoterms</code>.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_tactical/#domain-services","title":"Domain Services","text":"<p>Domain services hold logic that doesn\u2019t naturally belong to a single entity.</p> <ul> <li><code>TradeValidationService</code>: ensures compliance with market rules before capture.</li> <li><code>RiskCalculationService</code>: computes VaR, exposures, stress scenarios.</li> <li><code>LogisticsSchedulingService</code>: allocates shipments to vessels.</li> <li><code>SettlementProcessingService</code>: orchestrates payment with bank.</li> <li><code>RegulatoryReportingService</code>: generates EMIR/MiFID/REMIT reports.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_tactical/#repositories","title":"Repositories","text":"<p>Repositories abstract persistence, exposing aggregates in domain terms.</p> <ul> <li><code>TradeRepository</code> \u2192 find trade by ID, list open trades.</li> <li><code>PortfolioRepository</code> \u2192 get positions by portfolio.</li> <li><code>ShipmentRepository</code> \u2192 query inventory lots.</li> <li><code>SettlementRepository</code> \u2192 retrieve settlement instructions.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_tactical/#factories","title":"Factories","text":"<p>Factories encapsulate complex creation logic.</p> <ul> <li><code>TradeFactory</code>: builds trade aggregate from incoming FIX message.</li> <li><code>PortfolioFactory</code>: constructs initial portfolio from historical trades.</li> <li><code>ShipmentFactory</code>: creates shipment from trade Incoterms.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_tactical/#domain-events","title":"Domain Events","text":"<p>Events capture important state changes and are key for event-driven architecture.</p> <ul> <li><code>TradeCaptured</code></li> <li><code>TradeConfirmed</code></li> <li><code>TradeAmended</code></li> <li><code>PositionUpdated</code></li> <li><code>LimitBreached</code></li> <li><code>ShipmentScheduled</code></li> <li><code>ShipmentDelivered</code></li> <li><code>PaymentSettled</code></li> <li><code>LCExpired</code></li> <li><code>ReportGenerated</code></li> <li><code>KYCFlagged</code></li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_tactical/#application-services","title":"Application Services","text":"<p>These orchestrate use cases, invoking aggregates, repositories, and services.</p> <ul> <li><code>CaptureTradeAppService</code></li> <li><code>RunRiskAssessmentAppService</code></li> <li><code>ScheduleShipmentAppService</code></li> <li><code>ProcessSettlementAppService</code></li> <li><code>GenerateComplianceReportAppService</code></li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_tactical/#anti-corruption-layers","title":"Anti-Corruption Layers","text":"<p>Since commodities trading systems integrate with exchanges, banks, market data providers, ACLs protect the domain model from polluted external models.</p> <ul> <li>FIX/FPML adapter for trade ingestion.</li> <li>SWIFT/ISO20022 adapter for settlements.</li> <li>Market data adapter for Bloomberg/Platts feeds.</li> </ul>"},{"location":"ctrm/domain/ctrm_ddd_tactical/#summary","title":"Summary","text":"<p>Tactical DDD in commodities trading means:</p> <ul> <li>Aggregates for strong consistency boundaries (<code>Trade</code>, <code>Portfolio</code>, <code>Shipment</code>, <code>Settlement</code>).</li> <li>Entities for identity and lifecycle (<code>Counterparty</code>, <code>Position</code>).</li> <li>Value Objects for immutable, domain-specific values (<code>Price</code>, <code>Quantity</code>, <code>Currency</code>).</li> <li>Domain Events for real-time reactions (<code>TradeCaptured</code>, <code>PaymentSettled</code>).</li> <li>Domain Services, Repositories, Factories to handle logic, persistence, and creation.</li> </ul>"},{"location":"ctrm/domain/ctrm_sagas/","title":"Sagas in Commodities Trading systems","text":"<p>Sagas are especially relevant in commodities trading systems, where workflows span across multiple bounded contexts (Trade, Risk, Logistics, Settlement, Compliance) and no single transaction can cover them all.</p>"},{"location":"ctrm/domain/ctrm_sagas/#what-is-a-saga","title":"What is a Saga?","text":"<p>A Saga is a long-running business process that coordinates a series of local transactions across multiple services/contexts.</p> <p>Instead of a global transaction (which is impractical in microservices), each local step commits independently.</p> <p>If something fails, the Saga issues compensating actions to undo previous steps.</p>"},{"location":"ctrm/domain/ctrm_sagas/#saga-execution-models","title":"Saga Execution Models","text":""},{"location":"ctrm/domain/ctrm_sagas/#choreography-event-driven","title":"Choreography (Event-driven)","text":"<p>Each service listens to events and reacts. There is no central controller.</p> <ul> <li>Example: <code>TradeCaptured</code> \u2192 triggers Risk, Settlement, Logistics independently.</li> </ul>"},{"location":"ctrm/domain/ctrm_sagas/#orchestration-central-controller","title":"Orchestration (Central controller)","text":"<p>A Saga orchestrator like a workflow engine drives the sequence.</p> <ul> <li>Example: A <code>SettlementSaga</code> service tells Risk \u2192 Bank \u2192 Compliance what to do, step by step.</li> </ul>"},{"location":"ctrm/domain/ctrm_sagas/#why-sagas-matter-in-commodities-trading","title":"Why Sagas Matter in Commodities Trading","text":"<p>Trading workflows are cross-cutting:</p> <ul> <li> <p>Trade Lifecycle: Capture trade \u2192 validate credit \u2192 hedge exposure \u2192 confirm settlement.</p> </li> <li> <p>Physical Delivery: Confirm trade \u2192 schedule shipment \u2192 update inventory \u2192 generate bill of lading \u2192 trigger compliance reporting.</p> </li> <li> <p>Settlement: Validate LC \u2192 confirm delivery \u2192 release payment \u2192 generate audit log.</p> </li> </ul> <p>These can\u2019t be wrapped in one database transaction \u2014 they need a Saga.</p>"},{"location":"ctrm/domain/ctrm_sagas/#saga-example-settlement-flow","title":"Saga Example: Settlement Flow","text":""},{"location":"ctrm/domain/ctrm_sagas/#nominal-flow","title":"Nominal Flow","text":"<ol> <li>Trade Capture Service \u2192 emits <code>TradeConfirmed</code>.</li> <li>Risk Service \u2192 checks exposure.</li> <li>Settlement Service \u2192 requests Letter of Credit validation.</li> <li>Logistics Service \u2192 confirms delivery.</li> <li>Settlement Service \u2192 releases payment.</li> <li>Compliance Service \u2192 generates regulatory report.</li> </ol>"},{"location":"ctrm/domain/ctrm_sagas/#compensation-if-lc-expired","title":"Compensation (if LC expired)","text":"<ul> <li> <p>If <code>LetterOfCreditInvalid</code>, then:</p> </li> <li> <p>Settlement Service cancels payment.</p> </li> <li>Logistics Service marks shipment as \u201con hold.\u201d</li> <li>Trade Service flags trade as \u201cUnsettled.\u201d</li> </ul>"},{"location":"ctrm/domain/ctrm_sagas/#saga-in-plantuml-event-driven-choreography","title":"Saga in PlantUML (Event-driven Choreography)","text":"<pre><code>@startuml SettlementSaga\ntitle Settlement Saga - Choreography\n\n[Trade Service] -&gt; [Risk Service] : TradeConfirmed\n[Risk Service] -&gt; [Settlement Service] : ExposureValidated\n[Settlement Service] -&gt; [Bank Service] : LCValidationRequested\n[Bank Service] -&gt; [Settlement Service] : LCValid\n[Settlement Service] -&gt; [Logistics Service] : DeliveryConfirmed\n[Settlement Service] -&gt; [Compliance Service] : PaymentSettled\n\n== Compensation Flow ==\n[Bank Service] -&gt; [Settlement Service] : LCInvalid\n[Settlement Service] -&gt; [Logistics Service] : HoldShipment\n[Settlement Service] -&gt; [Trade Service] : FlagTradeUnsettled\n\n@enduml\n</code></pre>"},{"location":"ctrm/domain/ctrm_sagas/#design-considerations","title":"Design Considerations","text":"<ul> <li>Idempotency: Saga steps should tolerate retries.</li> <li>Event Sourcing: Keep full log of saga state.</li> <li>Timeouts: Some steps (LC approval) may take days \u2192 sagas are long-lived.</li> <li>Monitoring: Track saga status to avoid \u201clost\u201d processes.</li> <li>Tools: Workflow engines (Camunda, Temporal, Axon) help orchestrate sagas.</li> </ul>"},{"location":"ctrm/domain/ctrm_sagas/#summary","title":"Summary","text":"<ul> <li>Sagas = coordination of distributed transactions across bounded contexts.</li> <li>Critical for trade lifecycle, settlement, logistics workflows in CTRM systems.</li> <li>Two styles: choreography (events) vs orchestration (central saga manager).</li> <li>Support compensation, retries, timeouts, monitoring.</li> </ul>"},{"location":"ctrm/functional/ctrm_fn_scenarios/","title":"Functional scenarios in Commodities Trading systems","text":""},{"location":"ctrm/functional/ctrm_fn_scenarios/#trade-capture","title":"Trade Capture","text":"<pre><code>Feature: Trade Capture\n  As a trader\n  I want to capture deals\n  So that I can track positions and exposures\n\n  Scenario: Capture a valid crude oil futures trade (nominal)\n    Given I am logged in as a trader\n    When I record \"Buy 100 contracts of WTI Crude Oil Futures at $80 with Counterparty ABC\"\n    Then the trade should be saved\n    And my position should reflect +100 contracts\n\n  Scenario: Reject trade without counterparty (edge)\n    Given I am entering a new trade\n    When I omit counterparty details\n    Then the system should reject the trade\n    And display \"Counterparty is required\"\n</code></pre>"},{"location":"ctrm/functional/ctrm_fn_scenarios/#trade-execution","title":"Trade execution","text":"<pre><code>Feature: Analytics &amp; Decision Support\n  As a trader\n  I want to place and manage commodity orders\n  So that I can execute my trading strategies\n\n  Scenario: Place a futures contract order\n    Given I want to buy 100 lots of Wheat Futures for December delivery\n    When I submit the order at a limit price of $6.50\n    Then the order should be routed to the appropriate exchange\n    And I should see the order status as \"Pending\"\n\n  Scenario: Track partial fills\n    Given I have an open order of 50 lots of Copper Futures\n    When 20 lots are filled by the exchange\n    Then the system should update my position to reflect 20 filled\n    And keep the remaining 30 as open\n\n  Scenario: Order rejected by exchange\n    Given I submit a buy order for 1,000 lots of Natural Gas Futures\n    When the exchange rejects the order due to insufficient margin\n    Then the system should notify me with the rejection reason\n    And mark the order as \"Rejected\"\n\n  Scenario: Duplicate order prevention\n    Given I have already submitted a buy order for 100 Wheat Futures\n    When I accidentally submit the same order again\n    Then the system should detect the duplicate\n    And prompt me to confirm or cancel the second order\n</code></pre>"},{"location":"ctrm/functional/ctrm_fn_scenarios/#risk-management","title":"Risk Management","text":"<pre><code>Feature: Risk Management\n  As a risk manager\n  I want real-time monitoring of exposure and P&amp;L\n  So that I can prevent breaches of risk limits\n\n  Scenario: Mark-to-market valuation (nominal)\n    Given I hold 100 WTI futures bought at $80\n    And the current price is $85\n    When I run risk calculations\n    Then my unrealized P&amp;L should be $500,000\n\n  Scenario: Credit limit breach (edge)\n    Given Counterparty ABC has a credit limit of $10 million\n    And current exposure is $9.5 million\n    When I approve a $2 million trade\n    Then the system should block the approval\n    And alert \"Credit limit exceeded\"\n\n  Scenario: Exposure alert for crude oil\n    Given the exposure limit for Crude Oil is 10,000 barrels\n    And the trader\u2019s current exposure is 9,800 barrels\n    When the trader places a new buy order for 500 barrels\n    Then the system should block the order\n    And raise an alert \"Exposure limit exceeded\"\n\n  Scenario: Intraday risk limit breach due to volatility\n    Given the trader\u2019s risk limit is $1,000,000 VaR\n    And the current VaR is $950,000\n    When oil prices drop by 10% in one hour\n    Then the system should flag that the VaR has exceeded the limit\n    And automatically notify the risk manager\n\n  Scenario: Hedge effectiveness check\n    Given a trader is long 1,000 tons of Aluminum spot\n    And short 10 Aluminum Futures contracts\n    When the futures price diverges from the spot price significantly\n    Then the system should flag the hedge as ineffective\n</code></pre>"},{"location":"ctrm/functional/ctrm_fn_scenarios/#logistics","title":"Logistics","text":"<pre><code>Feature: Logistics &amp; Operations\n  As an operations manager\n  I want to track delivery schedules and inventory\n  So that physical trades are fulfilled correctly\n\n  Scenario: Schedule shipment from storage (nominal)\n    Given storage has 50,000 barrels of crude oil\n    When I schedule a shipment of 20,000 barrels to Customer X\n    Then inventory should reduce to 30,000 barrels\n    And shipment status should be \"Scheduled\"\n\n  Scenario: Prevent over-shipment (edge)\n    Given storage has 5,000 tons of wheat\n    When I attempt to ship 10,000 tons\n    Then the system should reject the request\n    And display \"Insufficient inventory\"\n\n  Scenario: Record shipment against contract\n    Given a physical contract for 1,000 tons of Coffee is due this week\n    When a shipment of 500 tons arrives at the port\n    Then the system should record the partial delivery\n    And update the inventory to reflect the received quantity\n\n  Scenario: Shipment delayed due to weather\n    Given a delivery contract specifies arrival by September 30\n    When the shipment is delayed due to a storm at sea\n    Then the system should update the expected delivery date\n    And notify counterparties of the delay\n\n  Scenario: Quality mismatch on physical delivery\n    Given a contract specifies Coffee Grade A\n    When the delivered batch contains 10% Grade B coffee\n    Then the system should flag a quality dispute\n    And trigger a workflow for claims and settlement adjustment\n</code></pre>"},{"location":"ctrm/functional/ctrm_fn_scenarios/#financing","title":"Financing","text":"<pre><code>Feature: Financing &amp; Settlement\n  Finance officers reconcile trades with banks and counterparties.\n\n  Scenario: Settle LC-backed trade (nominal)\n    Given a $5 million soybean shipment is backed by an LC\n    When the bank confirms the LC\n    And delivery is confirmed\n    Then the trade status should be \"Settled\"\n    And funds released to the producer\n\n  Scenario: Flag expired LC (edge)\n    Given a $2 million copper trade is backed by an LC\n    And the LC expired yesterday\n    When settlement is attempted\n    Then the system should block settlement\n    And display \"Letter of Credit expired\"\n</code></pre>"},{"location":"ctrm/functional/ctrm_fn_scenarios/#compliance","title":"Compliance","text":"<pre><code>Feature: Compliance &amp; Reporting\n  As a compliance officer\n  I want the system to detect suspicious trading behavior and enforce AML/KYC\n  So that I can prevent market abuse and sanctions breaches\n\n  Scenario: Generate EMIR report (nominal)\n    Given a new derivatives trade is captured\n    When I generate a daily EMIR report\n    Then the trade should appear in the report\n    And include counterparty LEI and UTI\n\n  Scenario: Flag missing KYC (edge)\n    Given I enter a trade with Counterparty XYZ\n    And KYC is incomplete\n    When I try to approve the trade\n    Then the system should block approval\n    And alert \"KYC required\"\n\n  Scenario: Detect spoofing pattern\n    Given a trader places 10 large buy orders and cancels them quickly\n    When the system analyzes the order history\n    Then it should flag this behavior as potential \"Spoofing\"\n    And generate a compliance alert\n\n  Scenario: AML red flag for counterparty\n    Given I attempt to trade with a new counterparty\n    When the KYC check shows they are on a sanctions list\n    Then the system should block the trade\n    And escalate to compliance for review\n\n  Scenario: Failed regulatory submission\n    Given I am required to report daily trades to the regulator\n    When the submission file fails to transmit\n    Then the system should retry automatically\n    And if still unsuccessful, alert compliance within 1 hour\n</code></pre>"},{"location":"ctrm/functional/ctrm_fn_scenarios/#analytics","title":"Analytics","text":"<pre><code>Feature: Analytics &amp; Decision Support\n  Analysts forecast and simulate market outcomes.\n\n  Scenario: Generate forward curve (nominal)\n    Given I have price data for crude oil\n    When I run forward curve generation\n    Then the system should output forward prices\n    And store them for risk and valuation\n\n  Scenario: Stress test scenario (edge)\n    Given I hold long positions in natural gas\n    When I run a scenario with prices -30%\n    Then the system should calculate P&amp;L impact\n    And show results in the risk dashboard\n</code></pre>"},{"location":"ctrm/functional/ctrm_fn_scenarios/#market-data","title":"Market data","text":"<pre><code>Feature: Analytics &amp; Decision Support\n  As a trader\n  I want to view real-time and historical commodity prices\n  So that I can make informed trading decisions\n\n  Scenario: View real-time futures price\n    Given I am logged into the trading system\n    When I select \"Crude Oil Futures\" for today's date\n    Then I should see the current bid/ask prices and market depth\n\n  Scenario: Analyze historical price trends\n    Given I have access to historical data\n    When I request the last 12 months of Gold prices\n    Then the system should display a chart with daily closing prices\n\n  Scenario: Missing market data feed\n    Given I rely on Bloomberg as my primary data source\n    When the Bloomberg feed is unavailable\n    Then the system should automatically switch to Refinitiv as backup\n    And notify the trader that fallback data is being used\n</code></pre>"},{"location":"ctrm/functional/ctrm_fn_scenarios/#portfolio","title":"Portfolio","text":"<pre><code>Feature: Analytics &amp; Decision Support\n  As a trader\n  I want to see my current portfolio and P&amp;L\n  So that I can assess performance\n\n  Scenario: View live portfolio P&amp;L\n    Given I have open positions in Gold and Silver futures\n    When I open the \"Portfolio Dashboard\"\n    Then I should see unrealized and realized P&amp;L for each commodity\n    And my aggregated net exposure across metals\n\n  Scenario: Portfolio reconciliation failure\n    Given I have open positions in Gold Futures\n    And the clearing house reports a different quantity\n    When the system compares internal vs external positions\n    Then it should generate a reconciliation exception\n    And assign it to the back office for investigation\n</code></pre>"},{"location":"ctrm/functional/ctrm_fn_scenarios/#settlements","title":"Settlements","text":"<pre><code>Feature: Analytics &amp; Decision Support\n  As a back-office clerk\n  I want automated settlement workflows\n  So that payments and reconciliations are efficient\n\n  Scenario: Generate invoice for physical trade\n    Given a physical trade of 2,000 barrels of oil is settled at $80/barrel\n    When the trade is confirmed\n    Then the system should generate an invoice of $160,000\n    And send it to the counterparty for payment\n\n  Scenario: Payment mismatch with counterparty\n    Given an invoice of $160,000 was issued\n    When the counterparty only pays $150,000\n    Then the system should record a short payment\n    And generate an exception report for dispute resolution\n\n  Scenario: FX conversion error\n    Given a settlement is in EUR\n    And the internal system mistakenly applies USD rate\n    When the mismatch is detected during reconciliation\n    Then the system should adjust the accounting entry\n    And notify finance of the correction\n</code></pre>"},{"location":"ctrm/functional/ctrm_use_cases/","title":"Use Cases in Commodities Trading systems","text":"<p>An IT system that supports the commodities trading domain must serve both the front office (traders, risk managers) and the back/middle office (operations, finance, compliance), as well as integrate with external ecosystems (exchanges, logistics providers, banks).</p> <p>A CTRM \u2014 Commodity Trading &amp; Risk Management system is expected to:</p> <ul> <li>Capture trades,</li> <li>Manage risk,</li> <li>Track physical flows,</li> <li>Handle finance/settlement,</li> <li>Stay compliant, and</li> <li>Provide analytics for better decision-making.</li> </ul>"},{"location":"ctrm/functional/ctrm_use_cases/#trade-capture-deal-lifecycle-management","title":"Trade Capture &amp; Deal Lifecycle Management","text":"<ul> <li>Record physical and financial trades (spot, forwards, futures, swaps, options, freight).</li> <li>Support for multiple asset classes (energy, metals, agri).</li> <li>Handle full trade lifecycle: initiation \u2192 confirmation \u2192 settlement.</li> <li>Interfaces with brokers, exchanges (e.g., CME, ICE, LME), and OTC deals.</li> </ul>"},{"location":"ctrm/functional/ctrm_use_cases/#risk-management","title":"Risk Management","text":"<ul> <li>Market risk: Mark-to-market valuations, VaR (Value at Risk), P&amp;L analysis.</li> <li>Credit risk: Counterparty exposure, limits monitoring, collateral tracking.</li> <li>Operational risk: Logistics disruptions, contract mismatches.</li> <li>Scenario analysis (e.g., oil price shock, FX volatility, weather events).</li> </ul>"},{"location":"ctrm/functional/ctrm_use_cases/#position-exposure-management","title":"Position &amp; Exposure Management","text":"<ul> <li>Track long/short positions across physical and paper trades.</li> <li>Monitor hedging effectiveness (linking physical cargo to futures/swaps).</li> <li>Real-time dashboards: inventory in transit, storage balances, contractual commitments.</li> </ul>"},{"location":"ctrm/functional/ctrm_use_cases/#logistics-operations","title":"Logistics &amp; Operations","text":"<ul> <li>Shipment scheduling (tankers, pipelines, trains, warehouses).</li> <li>Inventory management (silos, tanks, LME/ICE warehouses).</li> <li>Blending &amp; transformation tracking (e.g., crude \u2192 refined products).</li> <li>Integration with IoT/telemetry for stock monitoring.</li> </ul>"},{"location":"ctrm/functional/ctrm_use_cases/#financing-settlement","title":"Financing &amp; Settlement","text":"<ul> <li>Integration with banks for letters of credit, guarantees, collateral management.</li> <li>Payment workflows: invoicing, settlements, reconciliations.</li> <li>Trade finance: pre-export financing, repo, credit facilities.</li> <li>Multi-currency, multi-jurisdiction accounting support.</li> </ul>"},{"location":"ctrm/functional/ctrm_use_cases/#compliance-reporting","title":"Compliance &amp; Reporting","text":"<ul> <li>Regulatory compliance: EMIR, MiFID II, Dodd-Frank, REMIT, MAR.</li> <li>KYC/AML monitoring for counterparties.</li> <li>Environmental compliance: carbon credits, sustainability certificates.</li> <li>Reporting to regulators, exchanges, and internal audit.</li> </ul>"},{"location":"ctrm/functional/ctrm_use_cases/#analytics-decision-support","title":"Analytics &amp; Decision Support","text":"<ul> <li>Pricing engines (using curves, forward curves, spreads).</li> <li>Forecasting with AI/ML: weather impacts, yield predictions, shipping congestion.</li> <li>Scenario simulation: geopolitical shocks, policy changes, demand shifts.</li> <li>Profitability and margin analysis by trade, region, commodity.</li> </ul>"},{"location":"ctrm/functional/ctrm_use_cases/#integration-ecosystem-connectivity","title":"Integration &amp; Ecosystem Connectivity","text":"<ul> <li>External integrations: exchanges, clearinghouses, banks, logistics providers.</li> <li>Market data feeds: Bloomberg, Refinitiv, Platts, Argus.</li> <li>ERP integration: SAP, Oracle for accounting/finance.</li> <li>APIs for algorithmic trading and advanced analytics.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr/","title":"NFRs in Commodities Trading systems","text":"<p>An IT system in commodities trading must be:</p> <ul> <li>Fast (low latency, real-time risk).</li> <li>Reliable (always on, globally redundant).</li> <li>Secure &amp; compliant (regulatory + cybersecurity).</li> <li>Integrable (with exchanges, banks, ERP, logistics).</li> <li>Flexible (new commodities, instruments, regulations).</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr/#performance-scalability","title":"Performance &amp; Scalability","text":"<ul> <li>Handle high trade volumes (thousands to millions daily, depending on asset class).</li> <li>Real-time mark-to-market valuations across portfolios.</li> <li>Low-latency market data ingestion (sub-second for intraday traders).</li> <li>Scale horizontally as commodity coverage expands (energy, metals, agri).</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr/#availability-reliability","title":"Availability &amp; Reliability","text":"<ul> <li>High availability (\u226599.9%) to avoid trading disruptions.</li> <li>Disaster recovery with RPO near-zero and RTO &lt; 1 hour.</li> <li>Redundancy across data centers or cloud regions.</li> <li>Support for 24x7 global operations across time zones.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr/#security","title":"Security","text":"<ul> <li>Strong authentication &amp; authorization (RBAC, MFA).</li> <li>Data encryption in transit and at rest (trades, counterparties, pricing).</li> <li>Audit trails for all actions (regulatory requirement).</li> <li>Compliance with cybersecurity standards (ISO 27001, NIST, SOC2).</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr/#data-integrity-consistency","title":"Data Integrity &amp; Consistency","text":"<ul> <li>Accurate, tamper-proof recording of trades and settlements.</li> <li>Synchronization between front, middle, and back office modules.</li> <li>Support for event sourcing or transaction logs for recovery.</li> <li>Guaranteed reconciliation with banks, exchanges, and warehouses.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr/#interoperability-integration","title":"Interoperability &amp; Integration","text":"<ul> <li>Integration with exchanges (CME, ICE, LME).</li> <li>Support for market data feeds (Bloomberg, Refinitiv, Platts, Argus).</li> <li>Interfaces with banks (letters of credit, SWIFT).</li> <li>Connectors to ERP systems (SAP, Oracle) for finance/accounting.</li> <li>Open APIs for algorithmic trading and advanced analytics.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr/#usability","title":"Usability","text":"<ul> <li>Role-based UIs for traders, risk managers, operators, compliance officers.</li> <li>Real-time dashboards for positions, risk, P&amp;L, inventory.</li> <li>Configurable alerts and workflows.</li> <li>Multi-language and multi-currency support.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr/#compliance-auditability","title":"Compliance &amp; Auditability","text":"<ul> <li>Regulatory reporting: EMIR, MiFID II, Dodd-Frank, REMIT, MAR.</li> <li>Full trade audit trails: who entered, modified, or approved.</li> <li>Data retention policies aligned with legal requirements.</li> <li>Support for ESG/Sustainability compliance (carbon credits, traceability).</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr/#maintainability-extensibility","title":"Maintainability &amp; Extensibility","text":"<ul> <li>Modular architecture to add new commodities or instruments.</li> <li>Support for continuous upgrades without downtime.</li> <li>Well-documented APIs and configuration.</li> <li>Automated regression testing for new releases.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr/#analytics-data-management","title":"Analytics &amp; Data Management","text":"<ul> <li>Real-time pricing engines and risk analytics.</li> <li>Support for historical analysis (backtesting, stress tests).</li> <li>Big data handling: satellite imagery, IoT data from storage/logistics.</li> <li>AI/ML integration for forecasting.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr/#cost-efficiency","title":"Cost &amp; Efficiency","text":"<ul> <li>Optimized infrastructure costs (cloud/on-prem hybrid).</li> <li>Efficient use of compute for real-time risk vs. batch reporting.</li> <li>License flexibility: scale users without exponential cost growth.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr_scenarios/","title":"Non-functional scenarios in Commodities Trading systems","text":""},{"location":"ctrm/nfr/ctrm_nfr_scenarios/#performance","title":"Performance","text":"<pre><code>Feature: Performance &amp; Scalability\n  The system must handle high trading volumes with low latency.\n\n  Scenario: Process trades under latency threshold (nominal)\n    Given the system receives 10,000 trades in one minute\n    When trades are captured and positions updated\n    Then each trade should be processed in under 200 milliseconds\n    And no trades should be dropped\n\n  Scenario: Graceful degradation at peak load (edge)\n    Given the system receives 100,000 trades in one minute\n    When load exceeds normal thresholds\n    Then the system should queue excess trades\n    And alert operations with \"High load\"\n    And continue processing without crashing\n</code></pre>"},{"location":"ctrm/nfr/ctrm_nfr_scenarios/#availability","title":"Availability","text":"<pre><code>Feature: Availability &amp; Reliability\n  The system must be continuously available with disaster recovery.\n\n  Scenario: High availability uptime (nominal)\n    Given the system is running\n    When I monitor uptime over one month\n    Then availability should be at least 99.9%\n\n  Scenario: Failover to disaster recovery site (edge)\n    Given the primary data center is unavailable\n    When a disaster is declared\n    Then the system should failover to the backup site\n    And recovery time objective should be under 1 hour\n</code></pre>"},{"location":"ctrm/nfr/ctrm_nfr_scenarios/#security","title":"Security","text":"<pre><code>Feature: Security\n  The system must enforce authentication, authorization, and encryption.\n\n  Scenario: Role-based access control (nominal)\n    Given I am logged in as a risk manager\n    When I attempt to view trade details\n    Then I should be allowed\n    But when I attempt to approve a settlement\n    Then I should be denied\n\n  Scenario: Encryption enforcement (edge)\n    Given I send data between client and server\n    When I inspect the connection\n    Then traffic should be encrypted with TLS 1.2 or higher\n</code></pre>"},{"location":"ctrm/nfr/ctrm_nfr_scenarios/#data-integrity","title":"Data Integrity","text":"<pre><code>Feature: Data Integrity &amp; Consistency\n  The system must ensure accurate trade records.\n\n  Scenario: Prevent duplicate trade IDs (nominal)\n    Given a trade with ID \"TR123\" is recorded\n    When I try to enter another trade with ID \"TR123\"\n    Then the system should reject it\n    And display \"Duplicate trade ID not allowed\"\n\n  Scenario: Ensure reconciliation with external systems (edge)\n    Given I reconcile trades with exchange reports\n    When discrepancies are found\n    Then the system should flag mismatches\n    And generate an exception report\n</code></pre>"},{"location":"ctrm/nfr/ctrm_nfr_scenarios/#compliance","title":"Compliance","text":"<pre><code>Feature: Compliance &amp; Auditability\n  The system must meet regulatory requirements.\n\n  Scenario: Regulatory report generation (nominal)\n    Given I have captured a derivatives trade\n    When I generate the EMIR daily report\n    Then the trade should appear with counterparty LEI and UTI\n\n  Scenario: Complete audit trail (edge)\n    Given a trader edits a trade after capture\n    When I view the audit log\n    Then the system should show who made the change\n    And when it was made\n    And what was changed\n</code></pre>"},{"location":"ctrm/nfr/ctrm_nfr_scenarios/#maintainability","title":"Maintainability","text":"<pre><code>Feature: Maintainability &amp; Extensibility\n  The system should support upgrades and modular expansion.\n\n  Scenario: Zero-downtime upgrade (nominal)\n    Given the system is in production\n    When a patch release is applied\n    Then users should remain logged in\n    And trades should continue to be processed\n\n  Scenario: Add new commodity type without redeployment (edge)\n    Given the system currently supports crude oil and copper\n    When I configure \"wheat\" as a new commodity\n    Then I should be able to capture wheat trades\n    Without restarting the system\n</code></pre>"},{"location":"ctrm/nfr/ctrm_nfr_solutions/","title":"Tackling NFRs in Commodities Trading Systems","text":"<p>Tackling Non-Functional Requirements (NFRs) in a system like a Commodities Trading Platform requires a mix of architectural patterns, technology choices, and operational practices. Let\u2019s go through the usual alternatives per NFR category.</p>"},{"location":"ctrm/nfr/ctrm_nfr_solutions/#performance-scalability","title":"Performance &amp; Scalability","text":"<ul> <li>Caching: In-memory caches (Redis, Hazelcast) for market data and trade lookups.</li> <li>Parallelization: Grid computing for risk (e.g., VaR distributed across cluster).</li> <li>Scalable architecture: Horizontal scaling with microservices or cloud auto-scaling.</li> <li>CQRS: Separate read/write models to optimize queries (e.g., positions dashboard).</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr_solutions/#availability-reliability","title":"Availability &amp; Reliability","text":"<ul> <li>High Availability setups: Active-active clustering, load balancers.</li> <li>Disaster Recovery: Multi-region replication, failover orchestration.</li> <li>Chaos engineering: Proactively test failure modes (Netflix Chaos Monkey style).</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr_solutions/#security","title":"Security","text":"<ul> <li>Authentication &amp; Authorization: RBAC, ABAC, OAuth2/OIDC, multi-factor authentication.</li> <li>Encryption: TLS 1.2+ for transit, AES-256 at rest.</li> <li>Secrets Management: Vault, KMS for keys and credentials.</li> <li>Zero Trust Architecture: Verify identity and context on every request.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr_solutions/#data-integrity-consistency","title":"Data Integrity &amp; Consistency","text":"<ul> <li>Database Transactions: ACID transactions for trades and settlements.</li> <li>Event Sourcing: Immutable log of domain events (<code>TradeCaptured</code>, <code>PaymentSettled</code>).</li> <li>Idempotency: Ensure retrying (e.g., trade ingestion from FIX) doesn\u2019t duplicate.</li> <li>Reconciliation Tools: Automated checks against exchanges, banks, warehouses.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr_solutions/#interoperability-integration","title":"Interoperability &amp; Integration","text":"<ul> <li>Messaging: Kafka, MQ for async integration between services.</li> <li>APIs: REST/GraphQL for internal modules; FIX/FPML/SWIFT for external.</li> <li>Enterprise Service Bus (legacy): Used in SOA contexts for orchestration.</li> <li>Adapters / ACL (Anti-Corruption Layer): Translate external models into domain model.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr_solutions/#usability","title":"Usability","text":"<ul> <li>Role-based dashboards: Traders (positions, P&amp;L), Risk Managers (limits, VaR), Ops (logistics).</li> <li>UI frameworks: Rich web UIs (React, Angular), streaming dashboards.</li> <li>Internationalization: Multi-language, multi-currency, time-zone aware UIs.</li> <li>Alerting/notifications: Configurable alerts for breaches or anomalies.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr_solutions/#compliance-auditability","title":"Compliance &amp; Auditability","text":"<ul> <li>Immutable Audit Logs: Event sourcing or append-only stores (Kafka log, blockchain-like).</li> <li>Data Retention: Configurable per regulation (MiFID II = 5+ years).</li> <li>Regulatory APIs: Interfaces to trade repositories and regulators.</li> <li>Traceability: End-to-end trace of \u201cwho did what when.\u201d</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr_solutions/#maintainability-extensibility","title":"Maintainability &amp; Extensibility","text":"<ul> <li>Modular Architecture: Microservices or plug-in modules.</li> <li>DevOps Practices: CI/CD pipelines, automated regression testing.</li> <li>Domain-Driven Design: Bounded contexts, aggregates to keep complexity manageable.</li> <li>Configuration-driven features: Add new commodity types without redeployment.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr_solutions/#analytics-data-management","title":"Analytics &amp; Data Management","text":"<ul> <li>Data Lakes: Store tick data, logistics, IoT feeds for analytics.</li> <li>Stream Processing: Flink, Spark Streaming for real-time P&amp;L or exposure.</li> <li>Machine Learning: Forecast demand, weather, congestion.</li> <li>Time-series Databases: InfluxDB, TimescaleDB for market curves.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr_solutions/#cost-efficiency","title":"Cost &amp; Efficiency","text":"<ul> <li>Cloud elasticity: Pay-as-you-go scaling (AWS, Azure, GCP).</li> <li>Serverless for batch: Regulatory reports, ad-hoc analytics.</li> <li>Containerization: Kubernetes for resource efficiency.</li> <li>FinOps practices: Continuous monitoring of cost vs. utilization.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr_solutions/#summary","title":"Summary","text":"<p>To meet NFRs, architectural tactics are usually:</p> <ul> <li>Performance \u2192 caching, parallelization, CQRS.</li> <li>Availability \u2192 redundancy, DR, chaos testing.</li> <li>Security \u2192 zero trust, encryption, RBAC.</li> <li>Consistency \u2192 transactions, event sourcing, reconciliation.</li> <li>Integration \u2192 APIs, messaging, adapters.</li> <li>Compliance \u2192 immutable logs, reporting APIs.</li> <li>Maintainability \u2192 modular design, CI/CD, DDD.</li> <li>Analytics \u2192 data lakes, ML, stream processing.</li> <li>Cost efficiency \u2192 cloud elasticity, containerization.</li> </ul>"},{"location":"ctrm/nfr/ctrm_nfr_solutions/#nfrs-and-architecture-tactics","title":"NFRs and Architecture Tactics","text":"NFR Category Tactics / Alternatives Performance &amp; Scalability - Caching (Redis, Hazelcast)- Parallelization / grid computing for risk calcs- Horizontal scaling via microservices &amp; cloud- CQRS for read/write separation Availability &amp; Reliability - Active-active clustering- Multi-region disaster recovery- Load balancers- Chaos engineering to test resilience Security - RBAC / ABAC with OAuth2, MFA- TLS 1.2+ in transit, AES-256 at rest- Vault/KMS for secrets- Zero Trust Architecture Data Integrity &amp; Consistency - ACID transactions- Event sourcing with immutable logs- Idempotent message handling- Automated reconciliation against exchanges/banks Interoperability &amp; Integration - Messaging (Kafka, MQ)- APIs (REST, GraphQL, FIX, FPML, SWIFT)- Anti-Corruption Layer for external models- Legacy ESB (in SOA setups) Usability - Role-based dashboards- Rich UI frameworks (React, Angular)- Multi-language &amp; multi-currency support- Configurable alerts/notifications Compliance &amp; Auditability - Immutable audit logs- Append-only event stores- Regulatory reporting APIs- End-to-end traceability (who, what, when) Maintainability &amp; Extensibility - Modular/microservices architecture- CI/CD pipelines &amp; automated tests- Domain-Driven Design (bounded contexts)- Config-driven extensions (e.g., new commodities) Analytics &amp; Data Management - Data lakes for historical &amp; tick data- Stream processing (Flink, Spark Streaming)- Time-series DBs for curves (TimescaleDB, InfluxDB)- AI/ML for forecasting &amp; optimization Cost &amp; Efficiency - Cloud elasticity (scale up/down)- Serverless batch jobs- Kubernetes for container orchestration- FinOps monitoring practices"},{"location":"ctrm/outages/ctrm_outages/","title":"Known Outages in Commodities Trading systems","text":"<p>In commodities trading, outages can come from internal CTRM/ETRM systems or from external dependencies (exchanges, clearing houses, banks, data providers). Because outages can freeze trading or risk management, they are high-impact events.</p>"},{"location":"ctrm/outages/ctrm_outages/#exchange-outages","title":"Exchange Outages","text":"<p>Exchanges are central \u2014 if they fail, both trading and risk management grind to a halt.</p> <ul> <li>ICE (Intercontinental Exchange): has had historical outages where futures trading halted (energy contracts impacted).</li> <li>CME Group: in Feb 2020, CME suffered an outage affecting Globex platform, halting futures/options trading across crude oil, grains, metals.</li> <li>LME (London Metal Exchange): in 2022, the LME suspended nickel trading for days after extreme price swings, effectively an \"outage by design.\"</li> </ul> <p>Impact: No trades can be captured or hedged, risk models can\u2019t update positions.</p>"},{"location":"ctrm/outages/ctrm_outages/#market-data-provider-outages","title":"Market Data Provider Outages","text":"<p>Real-time pricing is critical for risk and P&amp;L.</p> <ul> <li>Bloomberg: has experienced global outages (2015: a major Bloomberg terminal outage disrupted trading worldwide for hours).</li> <li>Refinitiv (Thomson Reuters Eikon): occasional downtime, affecting price feeds.</li> <li>Platts / Argus: outages in publishing benchmark prices delayed settlements.</li> </ul> <p>Impact: Risk calcs fail, settlement can\u2019t be priced, compliance reporting inaccurate.</p>"},{"location":"ctrm/outages/ctrm_outages/#ctrm-etrm-system-outages","title":"CTRM / ETRM System Outages","text":"<p>Vendor platforms used by trading houses can fail.</p> <ul> <li>Openlink Endur / Allegro / Aspect: some firms reported outages due to patchy upgrades or DB corruption.</li> <li>In-house systems: failures from scaling (trade booking spikes), DB locks, or messaging middleware failures (e.g., Kafka cluster outage).</li> </ul> <p>Impact: Traders can\u2019t book new deals, operations can\u2019t release shipments, compliance can\u2019t generate reports.</p>"},{"location":"ctrm/outages/ctrm_outages/#banking-settlement-outages","title":"Banking / Settlement Outages","text":"<p>Financial workflows depend on banking infrastructure.</p> <ul> <li>SWIFT outages: rare, but when they occur, settlements can\u2019t move.</li> <li>Bank APIs: corporate banking outages delay Letters of Credit and payments.</li> <li>Clearing houses: ICE Clear, CME Clearing disruptions stop margin calls and settlements.</li> </ul> <p>Impact: Settlements fail, counterparties lose trust, operational risks spike.</p>"},{"location":"ctrm/outages/ctrm_outages/#infrastructure-cloud-outages","title":"Infrastructure &amp; Cloud Outages","text":"<ul> <li> <p>Cloud providers:</p> </li> <li> <p>AWS outages (notably 2020, 2021) took down trading apps hosted there.</p> </li> <li>Azure and GCP also had regional outages affecting CTRM SaaS platforms.</li> <li> <p>Networking:</p> </li> <li> <p>Internal datacenter fiber cuts or DNS failures \u2192 traders lose access.</p> </li> </ul> <p>Impact: Full CTRM downtime, inability to access positions or book trades.</p>"},{"location":"ctrm/outages/ctrm_outages/#regulatory-compliance-reporting-outages","title":"Regulatory &amp; Compliance Reporting Outages","text":"<ul> <li>Trade Repositories (TRs): ESMA-registered TRs like DTCC, Regis-TR, UnaVista have reported outages \u2192 firms can\u2019t report EMIR/MiFID trades.</li> <li>Nominations systems in energy trading: failures prevented gas/power scheduling in markets like EEX or Nord Pool.</li> </ul> <p>Impact: Firms risk non-compliance penalties.</p>"},{"location":"ctrm/outages/ctrm_outages/#common-causes-of-outages","title":"Common Causes of Outages","text":"<ul> <li>Volume spikes (price crash, geopolitical events).</li> <li>Software defects (patch gone wrong, DB deadlocks).</li> <li>External dependency failures (market data/exchange).</li> <li>Cyber incidents (DDoS attacks on exchanges).</li> <li>Operational mistakes (misconfigured upgrade, wrong reference data).</li> </ul>"},{"location":"ctrm/outages/ctrm_outages/#summary","title":"Summary","text":"<p>Known outages in commodities trading affect:</p> <ul> <li>Exchanges (CME, ICE, LME).</li> <li>Market data providers (Bloomberg, Refinitiv, Platts).</li> <li>CTRM platforms (vendor or in-house).</li> <li>Banking/settlement (SWIFT, clearing houses).</li> <li>Cloud/infra (AWS, Azure).</li> <li>Regulatory systems (TRs, energy scheduling).</li> </ul> <p>Each outage can freeze trading, risk, settlement, or compliance \u2014 which is why firms invest heavily in resilience, DR, and monitoring.</p>"},{"location":"ctrm/testing/ctrm_testing_strategies/","title":"Testing Strategies in Commodities Trading systems","text":"<p>In commodities trading systems (CTRM/ETRM), testing strategies are absolutely critical because errors can lead to huge financial losses, compliance breaches, or operational disruptions.</p> <p>Testing needs to cover both functional and non-functional dimensions, across highly interconnected bounded contexts.</p>"},{"location":"ctrm/testing/ctrm_testing_strategies/#unit-testing","title":"Unit Testing","text":"<p>Goal: Validate isolated domain logic (aggregates, value objects, services).</p> <p>Examples:</p> <ul> <li>A <code>Trade</code> aggregate rejects negative quantities.</li> <li>A <code>Settlement</code> cannot be executed if LC expired.</li> </ul> <p>Tactics:</p> <ul> <li>Mock repositories &amp; external services.</li> <li>Focus on domain invariants from tactical DDD.</li> </ul>"},{"location":"ctrm/testing/ctrm_testing_strategies/#component-module-testing","title":"Component / Module Testing","text":"<p>Goal: Validate one bounded context in isolation.</p> <p>Examples:</p> <ul> <li><code>Risk Management</code> correctly recalculates P&amp;L after receiving trades.</li> <li><code>Logistics</code> correctly updates inventory when shipment is scheduled.</li> </ul> <p>Tactics:</p> <ul> <li>Use in-memory DB (H2, SQLite) for repositories.</li> <li>Contract testing to validate service boundaries.</li> </ul>"},{"location":"ctrm/testing/ctrm_testing_strategies/#integration-testing","title":"Integration Testing","text":"<p>Goal: Validate collaboration between contexts/services.</p> <p>Examples:</p> <ul> <li><code>TradeCaptured</code> event triggers <code>Risk</code> update and <code>Settlement</code> creation.</li> <li><code>Logistics</code> updates flow into <code>Compliance</code>.</li> </ul> <p>Tactics:</p> <ul> <li>Event-driven integration tests (Kafka test topics).</li> <li>Use Testcontainers for DBs, message brokers.</li> </ul>"},{"location":"ctrm/testing/ctrm_testing_strategies/#end-to-end-e2e-testing","title":"End-to-End (E2E) Testing","text":"<p>Goal: Validate full workflows across the system.</p> <p>Examples:</p> <ul> <li>Trade lifecycle: Capture \u2192 Risk \u2192 Logistics \u2192 Settlement \u2192 Compliance report.</li> <li>Stress scenario: Bulk trades ingestion.</li> </ul> <p>Tactics:</p> <ul> <li>Use BDD/Gherkin scenarios (we already modeled some).</li> <li>Automate with Cucumber/Behave, link to CI/CD pipelines.</li> </ul>"},{"location":"ctrm/testing/ctrm_testing_strategies/#non-functional-testing","title":"Non-Functional Testing","text":"<p>Critical for CTRM due to regulatory and risk implications:</p> <p>Performance Testing:</p> <ul> <li>Can system process 10k trades/min under &lt;200ms latency?</li> <li>Tools: JMeter, Gatling.</li> </ul> <p>Scalability Testing:</p> <ul> <li>Simulate stress (100k trades in 1 min).</li> <li>Auto-scale microservices.</li> </ul> <p>Resilience/Chaos Testing:</p> <ul> <li>Kill Risk service \u2192 does saga recover?</li> <li>Tools: Chaos Monkey, Gremlin.</li> </ul> <p>Security Testing:</p> <ul> <li>Penetration tests, static analysis (SAST/DAST).</li> <li>Validate encryption, role-based access.</li> </ul> <p>Data Consistency Testing:</p> <ul> <li>Reconciliation between trades and settlements.</li> <li>Compare CTRM records with exchange/bank data.</li> </ul>"},{"location":"ctrm/testing/ctrm_testing_strategies/#regression-testing","title":"Regression Testing","text":"<p>Goal: Prevent breakage after changes.</p> <p>Tactics:</p> <ul> <li>Automated test suites for domain rules.</li> <li>Golden datasets (historical trades, risk calcs) for validation.</li> <li>Snapshot-based testing for event sourcing.</li> </ul>"},{"location":"ctrm/testing/ctrm_testing_strategies/#contract-testing-consumer-driven","title":"Contract Testing (Consumer-Driven)","text":"<p>Goal: Ensure APIs/events remain compatible across services.</p> <p>Examples:</p> <ul> <li>If Risk expects <code>TradeCaptured</code> event with <code>tradeId</code>, schema cannot change silently.</li> </ul> <p>Tools: Pact, Spring Cloud Contract.</p>"},{"location":"ctrm/testing/ctrm_testing_strategies/#test-data-management","title":"Test Data Management","text":"<p>Synthetic Data: Generate realistic trades, prices, shipments.</p> <p>Masked Data: Use anonymized production data for UAT.</p> <p>Scenario Libraries: Store stress events (oil price crash, LC expired).</p>"},{"location":"ctrm/testing/ctrm_testing_strategies/#environments-automation","title":"Environments &amp; Automation","text":"<p>CI/CD: Run unit, integration, regression tests on every commit.</p> <p>Test Environments:</p> <ul> <li>Dev \u2192 QA \u2192 UAT \u2192 Prod.</li> </ul> <p>Automation:</p> <ul> <li>GitHub Actions, Jenkins pipelines.</li> </ul>"},{"location":"ctrm/testing/ctrm_testing_strategies/#summary","title":"Summary","text":"<p>Testing strategy in CTRM combines:</p> <ul> <li>Unit tests for domain rules.</li> <li>Integration/E2E tests for workflows.</li> <li>Non-functional tests (performance, resilience, security).</li> <li>Contract &amp; regression tests for stability.</li> <li>BDD/Gherkin for business-readable specs.</li> <li>Synthetic + masked data for realistic scenarios.</li> </ul>"},{"location":"freight/freight_domain/","title":"Freight in Commodities Trading","text":"<p>Freight is a critical component in commodities trading, connecting the physical movement of commodities (oil, LNG, coal, grains, metals, etc.) with the financial and contractual side of trading.  </p> <p>It directly affects delivered cost, arbitrage opportunities, and risk management.  </p> <p>Freight must integrate with Trading, Risk, Operations, and Finance systems.</p>"},{"location":"freight/architecture/freight_architecture/","title":"Archticture of Freight systems","text":""},{"location":"freight/architecture/freight_architecture/#c4-container-view","title":"C4 Container View","text":"<pre><code>@startuml\n!include &lt;C4/C4_Container&gt;\n\nLAYOUT_LEFT_RIGHT()\n\nPerson(trader, \"Trader\")\nPerson(riskMgr, \"Risk Manager\")\nPerson(ops, \"Operations\")\nPerson(finance, \"Finance\")\n\nSystem_Boundary(domain, \"Commodities Trading Domain\") {\n  Container(tradingSys, \"Trading System (ETRM)\", \"Application\")\n  Container(freightSys, \"Freight Management System\", \"Application\")\n  Container(riskSys, \"Risk Engine\", \"Application\")\n  Container(financeSys, \"Finance &amp; Settlements\", \"Application\")\n  Container_Ext(baltic, \"Baltic Exchange\", \"External Service\")\n  Container_Ext(ais, \"AIS / Vessel Tracking\", \"External Service\")\n}\n\nRel(trader, tradingSys, \"Books trades\")\nRel(trader, freightSys, \"Books freight contracts, FFAs\")\nRel(riskMgr, riskSys, \"Monitors exposures\")\nRel(ops, freightSys, \"Executes voyages, monitors delays\")\nRel(finance, financeSys, \"Processes invoices\")\n\nRel(tradingSys, freightSys, \"Links trades with freight contracts\")\nRel(freightSys, riskSys, \"Publishes freight exposures\")\nRel(tradingSys, riskSys, \"Publishes commodity exposures\")\nRel(financeSys, freightSys, \"Settlements, demurrage invoices\")\nRel(freightSys, baltic, \"Fetches freight indices\")\nRel(freightSys, ais, \"Fetches vessel positions\")\n@enduml\n</code></pre>"},{"location":"freight/architecture/freight_architecture/#deployment-view","title":"Deployment View","text":"<pre><code>@startuml\n!include &lt;C4/C4_Deployment&gt;\n\nDeployment_Node(cloud, \"Cloud Platform\", \"AWS/Azure\") {\n  Deployment_Node(appTier, \"Application Tier\", \"Kubernetes Cluster\") {\n    ContainerInstance(tradingSvc, \"Trading System (ETRM)\", \"Service\")\n    ContainerInstance(freightSvc, \"Freight Management\", \"Service\")\n    ContainerInstance(riskSvc, \"Risk Engine\", \"Service\")\n    ContainerInstance(financeSvc, \"Finance &amp; Settlements\", \"Service\")\n  }\n  Deployment_Node(dataTier, \"Databases\", \"Managed SQL + NoSQL\") {\n    ContainerInstance(tradingDb, \"Trading DB\", \"Relational DB\")\n    ContainerInstance(freightDb, \"Freight DB\", \"Relational DB\")\n    ContainerInstance(riskDb, \"Risk DB\", \"Time-Series DB\")\n    ContainerInstance(financeDb, \"Finance DB\", \"Relational DB\")\n  }\n  Deployment_Node(integration, \"Integration Layer\", \"Kafka / APIs\") {\n    ContainerInstance(eventBus, \"Event Bus\", \"Kafka/MQ\")\n    ContainerInstance(apiGw, \"API Gateway\", \"REST/GraphQL\")\n  }\n}\n\nDeployment_Node(external, \"External Providers\", \"Internet\") {\n  ContainerInstance(baltic, \"Baltic Exchange API\", \"External\")\n  ContainerInstance(ais, \"AIS Vessel Tracking\", \"External\")\n}\n@enduml\n</code></pre>"},{"location":"freight/architecture/freight_architecture/#data-flow-view","title":"Data Flow View","text":"<pre><code>@startuml\n!include &lt;C4/C4_Dynamic&gt;\n\ntitle Data Flow: Commodity Trade \u2192 Freight \u2192 Risk \u2192 Finance\n\nPerson(trader, \"Trader\")\nPerson(riskMgr, \"Risk Manager\")\nPerson(financeUser, \"Finance\")\n\nSystem(tradingSys, \"Trading System (ETRM)\")\nSystem(freightSys, \"Freight Management System\")\nSystem(riskSys, \"Risk Engine\")\nSystem(financeSys, \"Finance &amp; Settlements\")\nSystem_Ext(baltic, \"Baltic Exchange API\")\nSystem_Ext(ais, \"AIS Vessel Tracking\")\n\ntrader -&gt; tradingSys : 1. Book trade (FOB/CIF)\ntradingSys -&gt; freightSys : 2. Publish trade event (shipment details)\nfreightSys -&gt; freightSys : 3. Create CharterParty &amp; Voyage\nfreightSys -&gt; baltic : 4. Fetch freight index\nfreightSys -&gt; ais : 5. Fetch vessel position/ETA\nfreightSys -&gt; tradingSys : 6. Link CharterParty to Trade\nfreightSys -&gt; riskSys : 7. Publish freight exposure &amp; MTM\nriskSys -&gt; riskMgr : 8. Update exposures, VaR\nfreightSys -&gt; financeSys : 9. Send freight invoices &amp; claims\nfinanceSys -&gt; financeUser : 10. Settlement &amp; GL posting\n@enduml\n</code></pre>"},{"location":"freight/architecture/freight_architecture/#conclusion","title":"Conclusion","text":"<p>Freight is both an operational and financial domain in commodities trading. It requires tight integration with Trading, Risk, and Finance, real-time data feeds (AIS, Baltic Exchange), and strong event-driven architecture for accurate PnL and exposure management.</p>"},{"location":"freight/domain/freight_ddd/","title":"DDD for Freight domain","text":""},{"location":"freight/domain/freight_ddd/#bounded-contexts-ddd-strategic-view","title":"Bounded Contexts (DDD Strategic View)","text":"<p>Freight is its own bounded context with links to: - Trading (freight cost part of landed price, arbitrage) - Risk Management (hedging freight exposure with FFAs) - Operations (scheduling, demurrage, voyage execution) - Finance (settlements, invoices, claims)  </p> <pre><code>@startuml\n!include &lt;C4/C4_Context&gt;\n\nLAYOUT_LEFT_RIGHT()\n\nPerson(trader, \"Trader\", \"Executes commodity and freight trades\")\nPerson(ops, \"Operations\", \"Manages logistics, shipping, demurrage\")\nPerson(risk, \"Risk Manager\", \"Hedges freight exposure, monitors PnL\")\n\nSystem_Boundary(domain, \"Commodities Trading Domain\") {\n  System_BC(trading, \"Trading\", \"Capture commodity trades, link to freight\")\n  System_BC(freight, \"Freight\", \"Chartering, freight contracts, FFA hedging, demurrage\")\n  System_BC(riskmgt, \"Risk Management\", \"Market risk, freight exposure, FFA hedges\")\n  System_BC(opsbc, \"Operations\", \"Vessel tracking, scheduling, port operations\")\n  System_BC(finance, \"Finance\", \"Freight settlements, invoices, claims\")\n}\n\nRel(trader, trading, \"Executes trades\")\nRel(trader, freight, \"Negotiates freight deals\")\nRel(ops, freight, \"Manages chartering, voyage execution\")\nRel(risk, riskmgt, \"Monitors freight risk\")\n\nRel(trading, freight, \"Links commodity trades with freight costs\")\nRel(freight, riskmgt, \"Exposes freight positions, FFA hedges\")\nRel(freight, opsbc, \"Shares vessel schedules, demurrage data\")\nRel(freight, finance, \"Invoices, settlements, claims\")\n@enduml\n</code></pre>"},{"location":"freight/domain/freight_ddd/#freight-internal-subdomains-ddd-tactical-view","title":"Freight Internal Subdomains (DDD Tactical View)","text":"<ul> <li>Chartering (voyage/time charters, CoAs)  </li> <li>Freight Derivatives (FFAs, swaps, hedging)  </li> <li>Demurrage &amp; Claims (laytime disputes, penalties)  </li> <li>Voyage Operations (vessel tracking, bunkering, port calls)  </li> <li>Integration Services (Baltic Exchange, AIS, weather)  </li> </ul> <pre><code>@startuml\n!include &lt;C4/C4_Context&gt;\n!include &lt;C4/C4_Container&gt;\n\nLAYOUT_LEFT_RIGHT()\n\nSystem_Boundary(freight, \"Freight Bounded Context\") {\n  Container(chartering, \"Chartering\", \"Subdomain\", \"Manage charter agreements\")\n  Container(derivatives, \"Freight Derivatives\", \"Subdomain\", \"FFAs, swaps, hedging freight exposure\")\n  Container(demurrage, \"Demurrage &amp; Claims\", \"Subdomain\", \"Laytime, disputes, claims settlement\")\n  Container(voyage, \"Voyage Operations\", \"Subdomain\", \"Vessel tracking, bunkering, port calls\")\n  Container(integration, \"Integration Services\", \"Subdomain\", \"External data: Baltic Exchange, AIS\")\n}\n\nRel(chartering, voyage, \"Passes charter details for execution\")\nRel(chartering, demurrage, \"Feeds laytime terms for demurrage calculation\")\nRel(derivatives, chartering, \"Hedges charter exposure\")\nRel(demurrage, integration, \"Validates port/terminal delays\")\nRel(voyage, integration, \"Receives vessel tracking, congestion, weather\")\nRel(derivatives, integration, \"Receives market indices (Baltic Exchange)\")\n@enduml\n</code></pre>"},{"location":"freight/domain/freight_ddd/#domain-model-entities-aggregates","title":"Domain Model (Entities &amp; Aggregates)","text":"<p>Key aggregates: - CharterParty, Voyage, DemurrageClaim, FFAContract Supporting entities: Vessel, Cargo, Port, PortCall, BalticIndex </p> <pre><code>@startuml\nhide circle\nhide methods\nskinparam linetype ortho\n\npackage \"Freight Domain Model\" {\n  class CharterParty {\n    +id: CharterPartyId\n    +type: CharterType (Voyage, Time, CoA)\n    +cargo: Cargo\n    +laycan: DateRange\n    +freightRate: Money\n  }\n\n  class Vessel {\n    +imoNumber: String\n    +name: String\n    +type: VesselType\n    +capacity: Tonnage\n  }\n\n  class Voyage {\n    +id: VoyageId\n    +vessel: Vessel\n    +route: Route\n    +bunkers: FuelConsumption\n    +status: VoyageStatus\n  }\n\n  class DemurrageClaim {\n    +id: ClaimId\n    +charterParty: CharterParty\n    +laytimeAllowed: Duration\n    +laytimeUsed: Duration\n    +amount: Money\n    +status: ClaimStatus\n  }\n\n  class FFAContract {\n    +id: ContractId\n    +route: BalticRoute\n    +settlementIndex: BalticIndex\n    +lotSize: Int\n    +price: Money\n    +settlementDate: Date\n  }\n\n  class BalticIndex {\n    +name: String\n    +value: Decimal\n    +publicationDate: Date\n  }\n\n  class PortCall {\n    +port: Port\n    +eta: DateTime\n    +etd: DateTime\n    +status: PortStatus\n  }\n\n  class Cargo {\n    +commodity: String\n    +quantity: Tonnage\n    +loadingPort: Port\n    +dischargePort: Port\n  }\n\n  class Port {\n    +name: String\n    +country: String\n    +unlocode: String\n  }\n\n  CharterParty \"1\" o-- \"1\" Cargo\n  CharterParty \"1\" o-- \"1\" Vessel\n  Voyage \"1\" o-- \"1\" Vessel\n  Voyage \"1\" o-- \"*\" PortCall\n  DemurrageClaim \"1\" o-- \"1\" CharterParty\n  FFAContract \"*\" --&gt; \"1\" BalticIndex\n}\n@enduml\n</code></pre>"},{"location":"freight/domain/freight_ddd/#cross-context-relationships","title":"Cross-Context Relationships","text":"<pre><code>@startuml\nhide circle\nhide methods\nskinparam linetype ortho\n\npackage \"Trading BC\" {\n  class CommodityTrade {\n    +id: TradeId\n    +commodity: String\n    +quantity: Tonnage\n    +price: Money\n    +incoterm: Incoterm\n    +status: TradeStatus\n  }\n  class TradeShipment {\n    +id: ShipmentId\n    +linkedTrade: CommodityTrade\n    +freight: CharterParty\n  }\n}\n\npackage \"Freight BC\" {\n  class CharterParty { +id: CharterPartyId }\n  class Voyage { +id: VoyageId }\n  class DemurrageClaim { +id: ClaimId }\n  class FFAContract { +id: ContractId }\n}\n\npackage \"Risk BC\" {\n  class MarketExposure { +id: ExposureId }\n  class FreightExposure { +id: ExposureId }\n  class Hedge { +id: HedgeId }\n}\n\nCommodityTrade \"1\" --&gt; \"0..*\" TradeShipment\nTradeShipment \"1\" --&gt; \"1\" CharterParty : \"uses\"\nVoyage \"1\" o-- \"1\" CharterParty\nDemurrageClaim \"0..*\" --&gt; \"1\" CharterParty\nFFAContract --&gt; FreightExposure : \"creates MTM exposure\"\nFreightExposure --&gt; Hedge : \"is hedged by\"\nMarketExposure --&gt; Hedge : \"is hedged by\"\n@enduml\n</code></pre>"},{"location":"freight/functional/freight_fn_scenarios/","title":"Functional scenarios in Freight systems","text":""},{"location":"freight/functional/freight_fn_scenarios/#chartering-freight-booking","title":"Chartering &amp; Freight Booking","text":"<pre><code>Feature: Chartering and Freight Booking\n  As a chartering manager\n  I want to capture voyage, time, and CoA charters\n  So that freight is linked correctly to commodity trades\n\n  Scenario: Book a voyage charter successfully\n    Given a commodity trade requiring transport\n    When I create a voyage charter with vessel, laycan, and freight rate\n    Then the charter should be linked to the trade\n    And the freight cost should appear in delivered PnL\n\n  Scenario: Vessel not available\n    Given a charter request for a vessel\n    When the vessel is already booked\n    Then the system should notify me of unavailability\n    And suggest alternative vessels or dates\n\n  Scenario: Laycan missed\n    Given a voyage charter with a fixed laycan\n    When the vessel arrives after the laycan period\n    Then the system should record a laycan breach\n    And notify operations for renegotiation\n</code></pre>"},{"location":"freight/functional/freight_fn_scenarios/#voyage-operations","title":"Voyage Operations","text":"<pre><code>Feature: Voyage Operations\n  As an operations manager\n  I want to track vessel voyages\n  So that I can monitor cargo delivery and costs\n\n  Scenario: Update voyage progress\n    Given a voyage is active\n    When I update the vessel ETA and port status\n    Then the voyage record should be updated\n    And new costs (bunkers, port charges) should be reflected\n\n  Scenario: Weather delay\n    Given a vessel is en route\n    When weather causes a delay of more than 24 hours\n    Then the system should update ETA\n    And notify trading and risk of possible exposure changes\n\n  Scenario: Vessel breakdown\n    Given a voyage charter is active\n    When the vessel breaks down\n    Then the voyage status should be marked as canceled\n    And a replacement charter request should be created\n</code></pre>"},{"location":"freight/functional/freight_fn_scenarios/#demurrage-claims","title":"Demurrage &amp; Claims","text":"<pre><code>Feature: Demurrage and Claims\n  As an operations/finance user\n  I want to calculate demurrage\n  So that I can settle claims correctly\n\n  Scenario: Demurrage calculated correctly\n    Given a voyage charter with laytime of 72 hours\n    And actual laytime used is 96 hours\n    When the system calculates demurrage\n    Then it should generate a demurrage invoice for 24 hours\n\n  Scenario: Despatch payment\n    Given a voyage charter with laytime of 72 hours\n    And actual laytime used is 60 hours\n    When the system calculates demurrage\n    Then it should generate a despatch payment for 12 hours\n\n  Scenario: Port logs missing\n    Given a demurrage calculation requires port logs\n    When port logs are not available\n    Then the system should flag the calculation as incomplete\n    And request missing documents from counterparties\n</code></pre>"},{"location":"freight/functional/freight_fn_scenarios/#freight-derivatives-ffas","title":"Freight Derivatives (FFAs)","text":"<pre><code>Feature: Freight Derivatives (FFAs)\n  As a risk manager\n  I want to hedge freight exposure with FFAs\n  So that I can manage freight cost volatility\n\n  Scenario: Create an FFA hedge\n    Given a voyage exposure on Baltic route C3\n    When I book an FFA contract on route C3 for equivalent lots\n    Then the system should link the FFA contract to the voyage exposure\n    And reduce net exposure accordingly\n\n  Scenario: Wrong index used\n    Given an exposure on Baltic route C3\n    When an FFA is booked on route C5\n    Then the system should warn me of a mismatch\n    And prevent incorrect linkage\n\n  Scenario: Illiquid market\n    Given a need to hedge exposure\n    When no counterparties are quoting FFAs\n    Then the system should record the hedge request as pending\n    And notify the trader of market illiquidity\n</code></pre>"},{"location":"freight/functional/freight_fn_scenarios/#finance-settlements","title":"Finance &amp; Settlements","text":"<pre><code>Feature: Freight Finance and Settlements\n  As a finance user\n  I want to process freight invoices and demurrage claims\n  So that settlements are accurate\n\n  Scenario: Settle freight invoice\n    Given a freight invoice is received\n    When I validate it against the charter terms\n    Then the invoice should be marked as approved\n    And settlement instructions should be generated\n\n  Scenario: Duplicate invoice\n    Given a freight invoice is received\n    When an identical invoice already exists in the system\n    Then the system should reject the duplicate\n    And notify finance of the discrepancy\n\n  Scenario: FX mismatch\n    Given a freight invoice in USD\n    When the system applies the wrong FX rate\n    Then it should flag the settlement as incorrect\n    And request correction before payment\n</code></pre>"},{"location":"freight/functional/freight_use_cases/","title":"Use cases","text":""},{"location":"freight/functional/freight_use_cases/#core-use-cases-in-freight-systems","title":"Core Use Cases in Freight systems","text":""},{"location":"freight/functional/freight_use_cases/#chartering-freight-booking","title":"Chartering &amp; Freight Booking","text":"<p>Nominal scenario:</p> <ul> <li>Trader books a commodity trade requiring transportation.</li> <li>Chartering desk books a voyage charter, time charter, or CoA.</li> <li>System stores contract terms (rate, laycan, vessel type, cargo size).</li> </ul> <p>Edge cases:</p> <ul> <li>Vessel not available \u2192 re-negotiation.</li> <li>Laycan missed \u2192 penalties or reallocation.</li> <li>Wrong vessel type booked \u2192 operational risk.</li> </ul>"},{"location":"freight/functional/freight_use_cases/#voyage-operations","title":"Voyage Operations","text":"<p>Nominal scenario:</p> <ul> <li>Track vessel status, bunkering, port calls, ETA/ETD.</li> <li> <p>Update voyage progress and costs in the system.</p> </li> <li> <p>Edge cases:</p> </li> <li> <p>Weather delays \u2192 ETA changes, congestion risk.</p> </li> <li>Vessel breakdown \u2192 voyage canceled, new vessel required.</li> <li>Cargo contamination \u2192 insurance and claims handling.</li> </ul>"},{"location":"freight/functional/freight_use_cases/#demurrage-claims","title":"Demurrage &amp; Claims","text":"<ul> <li> <p>Nominal scenario:</p> </li> <li> <p>System calculates laytime allowed vs laytime used.</p> </li> <li> <p>Generate demurrage or despatch invoice.</p> </li> <li> <p>Edge cases:</p> </li> <li> <p>Port congestion \u2192 long delays \u2192 disputes.</p> </li> <li>Counterparty rejects demurrage calculation \u2192 claims process initiated.</li> <li>Missing port logs \u2192 incomplete calculation.</li> </ul>"},{"location":"freight/functional/freight_use_cases/#freight-costing-trade-linkage","title":"Freight Costing &amp; Trade Linkage","text":"<ul> <li> <p>Nominal scenario:</p> </li> <li> <p>Link freight costs to commodity trades (FOB \u2192 CIF).</p> </li> <li> <p>Update delivered cost for PnL and arbitrage evaluation.</p> </li> <li> <p>Edge cases:</p> </li> <li> <p>Incorrect linkage \u2192 miscalculated PnL.</p> </li> <li>Commodity trade canceled but freight contract still active \u2192 financial loss.</li> <li>Freight cost higher than expected \u2192 arbitrage lost.</li> </ul>"},{"location":"freight/functional/freight_use_cases/#freight-derivatives-ffas","title":"Freight Derivatives (FFAs)","text":"<ul> <li> <p>Nominal scenario:</p> </li> <li> <p>Hedge freight exposure with FFAs.</p> </li> <li> <p>System links FFA positions with physical freight exposure.</p> </li> <li> <p>Edge cases:</p> </li> <li> <p>Index mismatch (wrong Baltic route used).</p> </li> <li>Market illiquidity \u2192 unable to hedge.</li> <li>Settlement disputes on FFA contract.</li> </ul>"},{"location":"freight/functional/freight_use_cases/#risk-management","title":"Risk Management","text":"<ul> <li> <p>Nominal scenario:</p> </li> <li> <p>Freight exposure (physical + FFAs) published to risk engine.</p> </li> <li> <p>Daily MTM and VaR calculations include freight.</p> </li> <li> <p>Edge cases:</p> </li> <li> <p>Data delays \u2192 exposure not updated in time.</p> </li> <li>Wrong mapping between vessel route and Baltic index.</li> <li>Extreme freight volatility (e.g., 2020-2021 container crisis).</li> </ul>"},{"location":"freight/functional/freight_use_cases/#finance-settlements","title":"Finance &amp; Settlements","text":"<p>Nominal scenario:</p> <ul> <li>Freight invoices generated and matched to charter contracts.</li> <li> <p>Demurrage/claims invoiced and settled.</p> </li> <li> <p>Edge cases:</p> </li> <li> <p>Counterparty disputes \u2192 settlement delayed.</p> </li> <li>Wrong FX rate applied \u2192 financial misstatement.</li> <li>Duplicate invoices \u2192 reconciliation needed.</li> </ul>"},{"location":"freight/functional/freight_use_cases/#integration-with-external-data","title":"Integration with External Data","text":"<ul> <li> <p>Nominal scenario:</p> </li> <li> <p>AIS feed provides vessel positions.</p> </li> <li> <p>Baltic Exchange indices feed freight benchmarks.</p> </li> <li> <p>Edge cases:</p> </li> <li> <p>Missing AIS signal \u2192 lost vessel tracking.</p> </li> <li>Index publication delayed \u2192 FFA settlement blocked.</li> <li>Data vendor downtime \u2192 no updates.</li> </ul>"},{"location":"freight/nfr/freight_nfr/","title":"Key NFRs for Freight Systems","text":""},{"location":"freight/nfr/freight_nfr/#performance-scalability","title":"Performance &amp; Scalability","text":"<ul> <li>Handle real-time vessel tracking feeds (AIS data, often millions of messages per day).</li> <li>Process market data (Baltic Exchange indices) with low latency for FFA settlements.</li> <li>Support high-frequency trade bookings and exposure calculations.</li> <li>Scale horizontally to handle peak volatility periods (e.g., shipping crises, sanctions news).</li> </ul>"},{"location":"freight/nfr/freight_nfr/#availability-reliability","title":"Availability &amp; Reliability","text":"<ul> <li>Near 24/7 availability (global trading desks operate across time zones).</li> <li>Failover and disaster recovery in case of outages (RPO &lt; 15 min, RTO &lt; 1 hr).</li> <li>Ensure no single point of failure in trade capture or freight cost linkage.</li> </ul>"},{"location":"freight/nfr/freight_nfr/#data-consistency-integrity","title":"Data Consistency &amp; Integrity","text":"<ul> <li>Freight contracts, voyages, and invoices must be consistent across Trading, Risk, and Finance.</li> <li>Strong transactional integrity for freight settlement (no double payments).</li> <li>Event-driven updates (trades \u2192 freight \u2192 risk \u2192 finance) must be idempotent.</li> </ul>"},{"location":"freight/nfr/freight_nfr/#security-compliance","title":"Security &amp; Compliance","text":"<ul> <li>Role-based access control (e.g., chartering desk vs finance vs risk).</li> <li>Audit trail for contract changes, invoices, demurrage disputes.</li> <li>Compliance with regulatory audits (SOX, IFRS, shipping regulations, sanctions screening for vessels and counterparties).</li> <li>Secure integration with external providers (Baltic, AIS).</li> </ul>"},{"location":"freight/nfr/freight_nfr/#interoperability-integration","title":"Interoperability &amp; Integration","text":"<ul> <li>Integrate with Trading (ETRM), Risk Engine, Finance ERP, and external data feeds.</li> <li>API-first architecture (REST/GraphQL) + event-driven messaging (Kafka, MQ).</li> <li>Support for industry formats (XML, FIX, JSON) for freight contracts &amp; settlements.</li> </ul>"},{"location":"freight/nfr/freight_nfr/#usability-transparency","title":"Usability &amp; Transparency","text":"<ul> <li>Clear visualization of voyage progress, laytime, demurrage calculations.</li> <li>Dashboards for freight exposure (linked physical &amp; FFA positions).</li> <li>Drill-down to port logs, vessel events, index history for disputes.</li> </ul>"},{"location":"freight/nfr/freight_nfr/#auditability-traceability","title":"Auditability &amp; Traceability","text":"<ul> <li>Every freight cost element (charter hire, bunker, port charges, demurrage) must be traceable.</li> <li>All FFA settlements should be reproducible against Baltic indices.</li> <li>Maintain immutable history of contract negotiations and changes.</li> </ul>"},{"location":"freight/nfr/freight_nfr/#extensibility-maintainability","title":"Extensibility &amp; Maintainability","text":"<ul> <li>Ability to add new vessel types or indices without major rework.</li> <li>Modular architecture so Freight Derivatives, Chartering, Demurrage can evolve independently.</li> <li>Automated testing for critical calculation logic (e.g., laytime, FFA MTM).</li> </ul>"},{"location":"freight/nfr/freight_nfr/#monitoring-observability","title":"Monitoring &amp; Observability","text":"<ul> <li>Monitor voyage execution KPIs (ETA deviation, bunker consumption).</li> <li>Monitor system health (API latencies, message queues, data freshness).</li> <li>Real-time alerts for missed feeds (e.g., Baltic index not updated).</li> </ul>"},{"location":"freight/nfr/freight_nfr_scenarios/","title":"Non-functional scenarios in Freight systems","text":""},{"location":"freight/nfr/freight_nfr_scenarios/#performance","title":"Performance","text":"<pre><code>Feature: System Performance and Scalability\n  As a system architect\n  I want the freight system to process high data volumes\n  So that traders and risk managers get timely updates\n\n  Scenario: Handle high-frequency vessel tracking feed\n    Given the system is receiving 1 million AIS messages per hour\n    When the data is processed\n    Then all vessel positions should be updated within 1 minute\n    And no more than 0.1% of messages should be lost\n\n  Scenario: Process freight indices in real-time\n    Given Baltic Exchange publishes a new index\n    When the system receives it\n    Then the FFA MTM calculations should be updated within 5 seconds\n</code></pre>"},{"location":"freight/nfr/freight_nfr_scenarios/#availability","title":"Availability","text":"<pre><code>Feature: System Availability and Reliability\n  As an operations manager\n  I want the system to be highly available\n  So that freight booking and monitoring are uninterrupted\n\n  Scenario: Failover in case of node outage\n    Given the system is running in a clustered deployment\n    When one node fails\n    Then the system should continue operating without downtime\n    And all users should remain connected\n\n  Scenario: Disaster recovery\n    Given the primary data center is unavailable\n    When the disaster recovery site is activated\n    Then the system should be restored within 1 hour\n    And no more than 15 minutes of data should be lost\n</code></pre>"},{"location":"freight/nfr/freight_nfr_scenarios/#data-integrity","title":"Data Integrity","text":"<pre><code>Feature: Data Consistency and Integrity\n  As a finance user\n  I want freight data to remain consistent\n  So that invoices and PnL are correct\n\n  Scenario: Consistent freight contract linkage\n    Given a commodity trade is linked to a charter party\n    When the freight cost is updated\n    Then the delivered PnL in trading and risk systems should be updated consistently\n\n  Scenario: Idempotent freight update events\n    Given a freight update event is published twice\n    When it is consumed by the finance system\n    Then the freight cost should only be applied once\n</code></pre>"},{"location":"freight/nfr/freight_nfr_scenarios/#security-compliance","title":"Security &amp; Compliance","text":"<pre><code>Feature: Security and Compliance\n  As a compliance officer\n  I want all freight operations to be secure and auditable\n  So that we meet regulatory obligations\n\n  Scenario: Role-based access\n    Given a user is from the risk department\n    When they try to modify a charter party\n    Then the system should deny access\n\n  Scenario: Audit trail for demurrage disputes\n    Given a demurrage claim is modified\n    When the claim is saved\n    Then the system should log the change\n    And record the user, timestamp, and old vs new values\n</code></pre>"},{"location":"freight/nfr/freight_nfr_scenarios/#monitoring-observability","title":"Monitoring &amp; Observability","text":"<pre><code>Feature: Monitoring and Observability\n  As a support engineer\n  I want to monitor system health\n  So that I can detect issues quickly\n\n  Scenario: Alert for missing freight index\n    Given the system expects a Baltic Exchange update every day\n    When no update is received within 24 hours\n    Then the system should raise an alert\n\n  Scenario: Alert for abnormal latency\n    Given the average API response time is below 500ms\n    When response time exceeds 2 seconds for 5 minutes\n    Then the system should raise a performance alert\n</code></pre>"}]}